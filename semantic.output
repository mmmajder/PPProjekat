Terminals unused in grammar

   _WHILE
   _DO
   _PRIVATE
   _PROTECTED
   _PUBLIC
   _CONTIUNE
   _BREAK


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class_list

    3 class_list: class
    4           | class_list class

    5 @1: %empty

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET

    8 class_variable_list: %empty
    9                    | class_variable_list class_variable

   10 constructor_list: %empty
   11                 | constructor_list constructor

   12 $@2: %empty

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

   14 _constr_param_list: %empty
   15                   | _constr_with_params

   16 _constr_with_params: _constr_param
   17                    | _constr_with_params _COMMA _constr_param

   18 _constr_param: _TYPE _ID

   19 _constructor_body: %empty
   20                  | _constructor_body _constructor_row

   21 $@3: %empty

   22 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@3 _SEMICOLON

   23 function_list: %empty
   24              | function_list function

   25 @4: %empty

   26 function: _ACCESS_SPECIFIER static _TYPE _ID @4 _LPAREN parameter _RPAREN func_body

   27 static: %empty
   28       | _STATIC

   29 parameter: %empty
   30          | _TYPE _ID

   31 func_body: _LBRACKET variable_list statement_list _RBRACKET

   32 statement_list: %empty
   33               | statement_list statement

   34 statement: for_statement
   35          | make_object_statement
   36          | inc_statement
   37          | assignment_statement
   38          | return_statement
   39          | if_statement

   40 @5: %empty

   41 $@6: %empty

   42 $@7: %empty

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

   44 ids: %empty
   45    | id_list

   46 id_list: _ID
   47        | id_list _COMMA _ID

   48 $@8: %empty

   49 inc_statement: _ID $@8 _INC _SEMICOLON

   50 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   51 compound_statement: _LBRACKET statement _RBRACKET

   52 if_statement: if_part
   53             | if_part _ELSE compound_statement

   54 @9: %empty

   55 if_part: _IF _LPAREN @9 rel_exp _RPAREN compound_statement

   56 $@10: %empty

   57 @11: %empty

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

   59 rel_exp: num_exp _RELOP num_exp

   60 exp: literal
   61    | _ID
   62    | function_call
   63    | _LPAREN num_exp _RPAREN

   64 literal: _INT_NUMBER
   65        | _UINT_NUMBER

   66 $@12: %empty

   67 function_call: _ID $@12 _LPAREN argument _RPAREN

   68 argument: %empty
   69         | num_exp

   70 num_exp: exp
   71        | num_exp _AROP exp

   72 variable_list: %empty
   73              | variable_list variable

   74 $@13: %empty

   75 variable: _TYPE $@13 vars _SEMICOLON

   76 $@14: %empty

   77 class_variable: _TYPE $@14 class_line_vars _SEMICOLON

   78 class_line_vars: _ID
   79                | class_line_vars _COMMA _ID

   80 vars: _ID
   81     | vars _COMMA _ID

   82 return_statement: _RETURN num_exp _SEMICOLON
   83                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 18 26 30 58 75 77
_ACCESS_SPECIFIER (259) 6 26
_IF (260) 55
_ELSE (261) 53
_RETURN (262) 82 83
_ID (263) 18 22 26 30 43 46 47 49 50 58 61 67 78 79 80 81
_INT_NUMBER (264) 64
_UINT_NUMBER (265) 65
_CLASSNAME (266) 6 13 43
_LPAREN (267) 13 26 43 55 58 63 67
_RPAREN (268) 13 26 43 55 58 63 67
_LBRACKET (269) 7 13 31 51 58
_RBRACKET (270) 7 13 31 51 58
_ASSIGN (271) 22 43 50 58
_SEMICOLON (272) 22 43 49 50 58 75 77 82 83
_AROP (273) 71
_RELOP (274) 59
_COMMA (275) 17 47 79 81
_INC (276) 49 58
_WHILE (277)
_DO (278)
_PRIVATE (279)
_PROTECTED (280)
_PUBLIC (281)
_THIS (282) 22
_FOR (283) 58
_CONTIUNE (284)
_BREAK (285)
_NEW (286) 43
_CLASS (287) 6
_STATIC (288) 28
_DOT (289) 22
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1 2, on right: 0
class_list (38)
    on left: 3 4, on right: 2 4
class (39)
    on left: 6, on right: 3 4
@1 (40)
    on left: 5, on right: 6
class_statements (41)
    on left: 7, on right: 6
class_variable_list (42)
    on left: 8 9, on right: 7 9
constructor_list (43)
    on left: 10 11, on right: 7 11
constructor (44)
    on left: 13, on right: 11
$@2 (45)
    on left: 12, on right: 13
_constr_param_list (46)
    on left: 14 15, on right: 13
_constr_with_params (47)
    on left: 16 17, on right: 15 17
_constr_param (48)
    on left: 18, on right: 16 17
_constructor_body (49)
    on left: 19 20, on right: 13 20
_constructor_row (50)
    on left: 22, on right: 20
$@3 (51)
    on left: 21, on right: 22
function_list (52)
    on left: 23 24, on right: 7 24
function (53)
    on left: 26, on right: 24
@4 (54)
    on left: 25, on right: 26
static (55)
    on left: 27 28, on right: 26
parameter (56)
    on left: 29 30, on right: 26
func_body (57)
    on left: 31, on right: 26
statement_list (58)
    on left: 32 33, on right: 31 33 58
statement (59)
    on left: 34 35 36 37 38 39, on right: 33 51
make_object_statement (60)
    on left: 43, on right: 35
@5 (61)
    on left: 40, on right: 43
$@6 (62)
    on left: 41, on right: 43
$@7 (63)
    on left: 42, on right: 43
ids (64)
    on left: 44 45, on right: 43
id_list (65)
    on left: 46 47, on right: 45 47
inc_statement (66)
    on left: 49, on right: 36
$@8 (67)
    on left: 48, on right: 49
assignment_statement (68)
    on left: 50, on right: 37
compound_statement (69)
    on left: 51, on right: 53 55
if_statement (70)
    on left: 52 53, on right: 39
if_part (71)
    on left: 55, on right: 52 53
@9 (72)
    on left: 54, on right: 55
for_statement (73)
    on left: 58, on right: 34
$@10 (74)
    on left: 56, on right: 58
@11 (75)
    on left: 57, on right: 58
rel_exp (76)
    on left: 59, on right: 55 58
exp (77)
    on left: 60 61 62 63, on right: 70 71
literal (78)
    on left: 64 65, on right: 58 60
function_call (79)
    on left: 67, on right: 62
$@12 (80)
    on left: 66, on right: 67
argument (81)
    on left: 68 69, on right: 67
num_exp (82)
    on left: 70 71, on right: 50 59 63 69 71 82
variable_list (83)
    on left: 72 73, on right: 31 73
variable (84)
    on left: 75, on right: 73
$@13 (85)
    on left: 74, on right: 75
class_variable (86)
    on left: 77, on right: 9
$@14 (87)
    on left: 76, on right: 77
class_line_vars (88)
    on left: 78 79, on right: 77 79
vars (89)
    on left: 80 81, on right: 75 81
return_statement (90)
    on left: 82 83, on right: 38


State 0

    0 $accept: . program $end

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    6 class: _ACCESS_SPECIFIER . _CLASS _CLASSNAME @1 class_statements

    _CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: class_list .
    4 class_list: class_list . class

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    class  go to state 7


State 4

    3 class_list: class .

    $default  reduce using rule 3 (class_list)


State 5

    6 class: _ACCESS_SPECIFIER _CLASS . _CLASSNAME @1 class_statements

    _CLASSNAME  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 class_list: class_list class .

    $default  reduce using rule 4 (class_list)


State 8

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME . @1 class_statements

    $default  reduce using rule 5 (@1)

    @1  go to state 9


State 9

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 . class_statements

    _LBRACKET  shift, and go to state 10

    class_statements  go to state 11


State 10

    7 class_statements: _LBRACKET . class_variable_list constructor_list function_list _RBRACKET

    $default  reduce using rule 8 (class_variable_list)

    class_variable_list  go to state 12


State 11

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements .

    $default  reduce using rule 6 (class)


State 12

    7 class_statements: _LBRACKET class_variable_list . constructor_list function_list _RBRACKET
    9 class_variable_list: class_variable_list . class_variable

    _TYPE  shift, and go to state 13

    $default  reduce using rule 10 (constructor_list)

    constructor_list  go to state 14
    class_variable    go to state 15


State 13

   77 class_variable: _TYPE . $@14 class_line_vars _SEMICOLON

    $default  reduce using rule 76 ($@14)

    $@14  go to state 16


State 14

    7 class_statements: _LBRACKET class_variable_list constructor_list . function_list _RBRACKET
   11 constructor_list: constructor_list . constructor

    _CLASSNAME  shift, and go to state 17

    $default  reduce using rule 23 (function_list)

    constructor    go to state 18
    function_list  go to state 19


State 15

    9 class_variable_list: class_variable_list class_variable .

    $default  reduce using rule 9 (class_variable_list)


State 16

   77 class_variable: _TYPE $@14 . class_line_vars _SEMICOLON

    _ID  shift, and go to state 20

    class_line_vars  go to state 21


State 17

   13 constructor: _CLASSNAME . $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

    $default  reduce using rule 12 ($@2)

    $@2  go to state 22


State 18

   11 constructor_list: constructor_list constructor .

    $default  reduce using rule 11 (constructor_list)


State 19

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list . _RBRACKET
   24 function_list: function_list . function

    _ACCESS_SPECIFIER  shift, and go to state 23
    _RBRACKET          shift, and go to state 24

    function  go to state 25


State 20

   78 class_line_vars: _ID .

    $default  reduce using rule 78 (class_line_vars)


State 21

   77 class_variable: _TYPE $@14 class_line_vars . _SEMICOLON
   79 class_line_vars: class_line_vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 22

   13 constructor: _CLASSNAME $@2 . _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

    _LPAREN  shift, and go to state 28


State 23

   26 function: _ACCESS_SPECIFIER . static _TYPE _ID @4 _LPAREN parameter _RPAREN func_body

    _STATIC  shift, and go to state 29

    $default  reduce using rule 27 (static)

    static  go to state 30


State 24

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET .

    $default  reduce using rule 7 (class_statements)


State 25

   24 function_list: function_list function .

    $default  reduce using rule 24 (function_list)


State 26

   77 class_variable: _TYPE $@14 class_line_vars _SEMICOLON .

    $default  reduce using rule 77 (class_variable)


State 27

   79 class_line_vars: class_line_vars _COMMA . _ID

    _ID  shift, and go to state 31


State 28

   13 constructor: _CLASSNAME $@2 _LPAREN . _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

    _TYPE  shift, and go to state 32

    $default  reduce using rule 14 (_constr_param_list)

    _constr_param_list   go to state 33
    _constr_with_params  go to state 34
    _constr_param        go to state 35


State 29

   28 static: _STATIC .

    $default  reduce using rule 28 (static)


State 30

   26 function: _ACCESS_SPECIFIER static . _TYPE _ID @4 _LPAREN parameter _RPAREN func_body

    _TYPE  shift, and go to state 36


State 31

   79 class_line_vars: class_line_vars _COMMA _ID .

    $default  reduce using rule 79 (class_line_vars)


State 32

   18 _constr_param: _TYPE . _ID

    _ID  shift, and go to state 37


State 33

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list . _RPAREN _LBRACKET _constructor_body _RBRACKET

    _RPAREN  shift, and go to state 38


State 34

   15 _constr_param_list: _constr_with_params .
   17 _constr_with_params: _constr_with_params . _COMMA _constr_param

    _COMMA  shift, and go to state 39

    $default  reduce using rule 15 (_constr_param_list)


State 35

   16 _constr_with_params: _constr_param .

    $default  reduce using rule 16 (_constr_with_params)


State 36

   26 function: _ACCESS_SPECIFIER static _TYPE . _ID @4 _LPAREN parameter _RPAREN func_body

    _ID  shift, and go to state 40


State 37

   18 _constr_param: _TYPE _ID .

    $default  reduce using rule 18 (_constr_param)


State 38

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN . _LBRACKET _constructor_body _RBRACKET

    _LBRACKET  shift, and go to state 41


State 39

   17 _constr_with_params: _constr_with_params _COMMA . _constr_param

    _TYPE  shift, and go to state 32

    _constr_param  go to state 42


State 40

   26 function: _ACCESS_SPECIFIER static _TYPE _ID . @4 _LPAREN parameter _RPAREN func_body

    $default  reduce using rule 25 (@4)

    @4  go to state 43


State 41

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET . _constructor_body _RBRACKET

    $default  reduce using rule 19 (_constructor_body)

    _constructor_body  go to state 44


State 42

   17 _constr_with_params: _constr_with_params _COMMA _constr_param .

    $default  reduce using rule 17 (_constr_with_params)


State 43

   26 function: _ACCESS_SPECIFIER static _TYPE _ID @4 . _LPAREN parameter _RPAREN func_body

    _LPAREN  shift, and go to state 45


State 44

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body . _RBRACKET
   20 _constructor_body: _constructor_body . _constructor_row

    _RBRACKET  shift, and go to state 46
    _THIS      shift, and go to state 47

    _constructor_row  go to state 48


State 45

   26 function: _ACCESS_SPECIFIER static _TYPE _ID @4 _LPAREN . parameter _RPAREN func_body

    _TYPE  shift, and go to state 49

    $default  reduce using rule 29 (parameter)

    parameter  go to state 50


State 46

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET .

    $default  reduce using rule 13 (constructor)


State 47

   22 _constructor_row: _THIS . _DOT _ID _ASSIGN _ID $@3 _SEMICOLON

    _DOT  shift, and go to state 51


State 48

   20 _constructor_body: _constructor_body _constructor_row .

    $default  reduce using rule 20 (_constructor_body)


State 49

   30 parameter: _TYPE . _ID

    _ID  shift, and go to state 52


State 50

   26 function: _ACCESS_SPECIFIER static _TYPE _ID @4 _LPAREN parameter . _RPAREN func_body

    _RPAREN  shift, and go to state 53


State 51

   22 _constructor_row: _THIS _DOT . _ID _ASSIGN _ID $@3 _SEMICOLON

    _ID  shift, and go to state 54


State 52

   30 parameter: _TYPE _ID .

    $default  reduce using rule 30 (parameter)


State 53

   26 function: _ACCESS_SPECIFIER static _TYPE _ID @4 _LPAREN parameter _RPAREN . func_body

    _LBRACKET  shift, and go to state 55

    func_body  go to state 56


State 54

   22 _constructor_row: _THIS _DOT _ID . _ASSIGN _ID $@3 _SEMICOLON

    _ASSIGN  shift, and go to state 57


State 55

   31 func_body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 72 (variable_list)

    variable_list  go to state 58


State 56

   26 function: _ACCESS_SPECIFIER static _TYPE _ID @4 _LPAREN parameter _RPAREN func_body .

    $default  reduce using rule 26 (function)


State 57

   22 _constructor_row: _THIS _DOT _ID _ASSIGN . _ID $@3 _SEMICOLON

    _ID  shift, and go to state 59


State 58

   31 func_body: _LBRACKET variable_list . statement_list _RBRACKET
   73 variable_list: variable_list . variable

    _TYPE  shift, and go to state 60

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 61
    variable        go to state 62


State 59

   22 _constructor_row: _THIS _DOT _ID _ASSIGN _ID . $@3 _SEMICOLON

    $default  reduce using rule 21 ($@3)

    $@3  go to state 63


State 60

   75 variable: _TYPE . $@13 vars _SEMICOLON

    $default  reduce using rule 74 ($@13)

    $@13  go to state 64


State 61

   31 func_body: _LBRACKET variable_list statement_list . _RBRACKET
   33 statement_list: statement_list . statement

    _IF         shift, and go to state 65
    _RETURN     shift, and go to state 66
    _ID         shift, and go to state 67
    _CLASSNAME  shift, and go to state 68
    _RBRACKET   shift, and go to state 69
    _FOR        shift, and go to state 70

    statement              go to state 71
    make_object_statement  go to state 72
    inc_statement          go to state 73
    assignment_statement   go to state 74
    if_statement           go to state 75
    if_part                go to state 76
    for_statement          go to state 77
    return_statement       go to state 78


State 62

   73 variable_list: variable_list variable .

    $default  reduce using rule 73 (variable_list)


State 63

   22 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@3 . _SEMICOLON

    _SEMICOLON  shift, and go to state 79


State 64

   75 variable: _TYPE $@13 . vars _SEMICOLON

    _ID  shift, and go to state 80

    vars  go to state 81


State 65

   55 if_part: _IF . _LPAREN @9 rel_exp _RPAREN compound_statement

    _LPAREN  shift, and go to state 82


State 66

   82 return_statement: _RETURN . num_exp _SEMICOLON
   83                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86
    _SEMICOLON    shift, and go to state 87

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 91


State 67

   49 inc_statement: _ID . $@8 _INC _SEMICOLON
   50 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 92

    $default  reduce using rule 48 ($@8)

    $@8  go to state 93


State 68

   43 make_object_statement: _CLASSNAME . @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 40 (@5)

    @5  go to state 94


State 69

   31 func_body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 31 (func_body)


State 70

   58 for_statement: _FOR . _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _LPAREN  shift, and go to state 95


State 71

   33 statement_list: statement_list statement .

    $default  reduce using rule 33 (statement_list)


State 72

   35 statement: make_object_statement .

    $default  reduce using rule 35 (statement)


State 73

   36 statement: inc_statement .

    $default  reduce using rule 36 (statement)


State 74

   37 statement: assignment_statement .

    $default  reduce using rule 37 (statement)


State 75

   39 statement: if_statement .

    $default  reduce using rule 39 (statement)


State 76

   52 if_statement: if_part .
   53             | if_part . _ELSE compound_statement

    _ELSE  shift, and go to state 96

    $default  reduce using rule 52 (if_statement)


State 77

   34 statement: for_statement .

    $default  reduce using rule 34 (statement)


State 78

   38 statement: return_statement .

    $default  reduce using rule 38 (statement)


State 79

   22 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@3 _SEMICOLON .

    $default  reduce using rule 22 (_constructor_row)


State 80

   80 vars: _ID .

    $default  reduce using rule 80 (vars)


State 81

   75 variable: _TYPE $@13 vars . _SEMICOLON
   81 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 97
    _COMMA      shift, and go to state 98


State 82

   55 if_part: _IF _LPAREN . @9 rel_exp _RPAREN compound_statement

    $default  reduce using rule 54 (@9)

    @9  go to state 99


State 83

   61 exp: _ID .
   67 function_call: _ID . $@12 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 66 ($@12)
    $default  reduce using rule 61 (exp)

    $@12  go to state 100


State 84

   64 literal: _INT_NUMBER .

    $default  reduce using rule 64 (literal)


State 85

   65 literal: _UINT_NUMBER .

    $default  reduce using rule 65 (literal)


State 86

   63 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 101


State 87

   83 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 83 (return_statement)


State 88

   70 num_exp: exp .

    $default  reduce using rule 70 (num_exp)


State 89

   60 exp: literal .

    $default  reduce using rule 60 (exp)


State 90

   62 exp: function_call .

    $default  reduce using rule 62 (exp)


State 91

   71 num_exp: num_exp . _AROP exp
   82 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 102
    _AROP       shift, and go to state 103


State 92

   50 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 104


State 93

   49 inc_statement: _ID $@8 . _INC _SEMICOLON

    _INC  shift, and go to state 105


State 94

   43 make_object_statement: _CLASSNAME @5 . _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

    _ID  shift, and go to state 106


State 95

   58 for_statement: _FOR _LPAREN . _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _TYPE  shift, and go to state 107


State 96

   53 if_statement: if_part _ELSE . compound_statement

    _LBRACKET  shift, and go to state 108

    compound_statement  go to state 109


State 97

   75 variable: _TYPE $@13 vars _SEMICOLON .

    $default  reduce using rule 75 (variable)


State 98

   81 vars: vars _COMMA . _ID

    _ID  shift, and go to state 110


State 99

   55 if_part: _IF _LPAREN @9 . rel_exp _RPAREN compound_statement

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    rel_exp        go to state 111
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 112


State 100

   67 function_call: _ID $@12 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 113


State 101

   63 exp: _LPAREN num_exp . _RPAREN
   71 num_exp: num_exp . _AROP exp

    _RPAREN  shift, and go to state 114
    _AROP    shift, and go to state 103


State 102

   82 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 82 (return_statement)


State 103

   71 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    exp            go to state 115
    literal        go to state 89
    function_call  go to state 90


State 104

   50 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   71 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 116
    _AROP       shift, and go to state 103


State 105

   49 inc_statement: _ID $@8 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 117


State 106

   43 make_object_statement: _CLASSNAME @5 _ID . $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 41 ($@6)

    $@6  go to state 118


State 107

   58 for_statement: _FOR _LPAREN _TYPE . _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ID  shift, and go to state 119


State 108

   51 compound_statement: _LBRACKET . statement _RBRACKET

    _IF         shift, and go to state 65
    _RETURN     shift, and go to state 66
    _ID         shift, and go to state 67
    _CLASSNAME  shift, and go to state 68
    _FOR        shift, and go to state 70

    statement              go to state 120
    make_object_statement  go to state 72
    inc_statement          go to state 73
    assignment_statement   go to state 74
    if_statement           go to state 75
    if_part                go to state 76
    for_statement          go to state 77
    return_statement       go to state 78


State 109

   53 if_statement: if_part _ELSE compound_statement .

    $default  reduce using rule 53 (if_statement)


State 110

   81 vars: vars _COMMA _ID .

    $default  reduce using rule 81 (vars)


State 111

   55 if_part: _IF _LPAREN @9 rel_exp . _RPAREN compound_statement

    _RPAREN  shift, and go to state 121


State 112

   59 rel_exp: num_exp . _RELOP num_exp
   71 num_exp: num_exp . _AROP exp

    _AROP   shift, and go to state 103
    _RELOP  shift, and go to state 122


State 113

   67 function_call: _ID $@12 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    $default  reduce using rule 68 (argument)

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    argument       go to state 123
    num_exp        go to state 124


State 114

   63 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 63 (exp)


State 115

   71 num_exp: num_exp _AROP exp .

    $default  reduce using rule 71 (num_exp)


State 116

   50 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 50 (assignment_statement)


State 117

   49 inc_statement: _ID $@8 _INC _SEMICOLON .

    $default  reduce using rule 49 (inc_statement)


State 118

   43 make_object_statement: _CLASSNAME @5 _ID $@6 . _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

    _ASSIGN  shift, and go to state 125


State 119

   58 for_statement: _FOR _LPAREN _TYPE _ID . $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    $default  reduce using rule 56 ($@10)

    $@10  go to state 126


State 120

   51 compound_statement: _LBRACKET statement . _RBRACKET

    _RBRACKET  shift, and go to state 127


State 121

   55 if_part: _IF _LPAREN @9 rel_exp _RPAREN . compound_statement

    _LBRACKET  shift, and go to state 108

    compound_statement  go to state 128


State 122

   59 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 129


State 123

   67 function_call: _ID $@12 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 130


State 124

   69 argument: num_exp .
   71 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 103

    $default  reduce using rule 69 (argument)


State 125

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN . _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

    _NEW  shift, and go to state 131


State 126

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 . _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ASSIGN  shift, and go to state 132


State 127

   51 compound_statement: _LBRACKET statement _RBRACKET .

    $default  reduce using rule 51 (compound_statement)


State 128

   55 if_part: _IF _LPAREN @9 rel_exp _RPAREN compound_statement .

    $default  reduce using rule 55 (if_part)


State 129

   59 rel_exp: num_exp _RELOP num_exp .
   71 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 103

    $default  reduce using rule 59 (rel_exp)


State 130

   67 function_call: _ID $@12 _LPAREN argument _RPAREN .

    $default  reduce using rule 67 (function_call)


State 131

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW . _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON

    _CLASSNAME  shift, and go to state 133


State 132

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN . literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85

    literal  go to state 134


State 133

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME . $@7 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 42 ($@7)

    $@7  go to state 135


State 134

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal . _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 136


State 135

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 . _LPAREN ids _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 137


State 136

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON . rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ID           shift, and go to state 83
    _INT_NUMBER   shift, and go to state 84
    _UINT_NUMBER  shift, and go to state 85
    _LPAREN       shift, and go to state 86

    rel_exp        go to state 138
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 112


State 137

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN . ids _RPAREN _SEMICOLON

    _ID  shift, and go to state 139

    $default  reduce using rule 44 (ids)

    ids      go to state 140
    id_list  go to state 141


State 138

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp . _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 142


State 139

   46 id_list: _ID .

    $default  reduce using rule 46 (id_list)


State 140

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 143


State 141

   45 ids: id_list .
   47 id_list: id_list . _COMMA _ID

    _COMMA  shift, and go to state 144

    $default  reduce using rule 45 (ids)


State 142

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON . _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ID  shift, and go to state 145


State 143

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 146


State 144

   47 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 147


State 145

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID . _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _INC  shift, and go to state 148


State 146

   43 make_object_statement: _CLASSNAME @5 _ID $@6 _ASSIGN _NEW _CLASSNAME $@7 _LPAREN ids _RPAREN _SEMICOLON .

    $default  reduce using rule 43 (make_object_statement)


State 147

   47 id_list: id_list _COMMA _ID .

    $default  reduce using rule 47 (id_list)


State 148

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC . _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _RPAREN  shift, and go to state 149


State 149

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN . _LBRACKET @11 statement_list _RBRACKET

    _LBRACKET  shift, and go to state 150


State 150

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET . @11 statement_list _RBRACKET

    $default  reduce using rule 57 (@11)

    @11  go to state 151


State 151

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 . statement_list _RBRACKET

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 152


State 152

   33 statement_list: statement_list . statement
   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list . _RBRACKET

    _IF         shift, and go to state 65
    _RETURN     shift, and go to state 66
    _ID         shift, and go to state 67
    _CLASSNAME  shift, and go to state 68
    _RBRACKET   shift, and go to state 153
    _FOR        shift, and go to state 70

    statement              go to state 71
    make_object_statement  go to state 72
    inc_statement          go to state 73
    assignment_statement   go to state 74
    if_statement           go to state 75
    if_part                go to state 76
    for_statement          go to state 77
    return_statement       go to state 78


State 153

   58 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET .

    $default  reduce using rule 58 (for_statement)
