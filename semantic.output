Terminals unused in grammar

   _WHILE
   _DO
   _PRIVATE
   _PROTECTED
   _PUBLIC
   _CONTIUNE
   _BREAK


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class_list

    3 class_list: class
    4           | class_list class

    5 @1: %empty

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET

    8 class_variable_list: %empty
    9                    | class_variable_list class_variable

   10 constructor_list: %empty
   11                 | constructor_list constructor

   12 $@2: %empty

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

   14 _constr_param_list: %empty

   15 $@3: %empty

   16 _constr_param_list: $@3 _constr_with_params

   17 _constr_with_params: _constr_param
   18                    | _constr_with_params _COMMA _constr_param

   19 $@4: %empty

   20 _constr_param: _TYPE $@4 _ID

   21 _constructor_body: %empty
   22                  | _constructor_body _constructor_row

   23 $@5: %empty

   24 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@5 _SEMICOLON

   25 function_list: %empty
   26              | function_list function

   27 @6: %empty

   28 function: _ACCESS_SPECIFIER static _TYPE _ID @6 _LPAREN parameter _RPAREN func_body

   29 static: %empty
   30       | _STATIC

   31 parameter: %empty
   32          | _TYPE _ID

   33 func_body: _LBRACKET variable_list statement_list _RBRACKET

   34 statement_list: %empty
   35               | statement_list statement

   36 statement: for_statement
   37          | make_object_statement
   38          | inc_statement
   39          | assignment_statement
   40          | return_statement
   41          | if_statement

   42 @7: %empty

   43 $@8: %empty

   44 $@9: %empty

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

   46 ids: %empty
   47    | id_list

   48 id_list: _ID
   49        | id_list _COMMA _ID

   50 $@10: %empty

   51 inc_statement: _ID $@10 _INC _SEMICOLON

   52 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   53 compound_statement: _LBRACKET statement _RBRACKET

   54 if_statement: if_part
   55             | if_part _ELSE compound_statement

   56 @11: %empty

   57 if_part: _IF _LPAREN @11 rel_exp _RPAREN compound_statement

   58 $@12: %empty

   59 @13: %empty

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

   61 rel_exp: num_exp _RELOP num_exp

   62 exp: literal
   63    | _ID
   64    | function_call
   65    | _LPAREN num_exp _RPAREN

   66 literal: _INT_NUMBER
   67        | _UINT_NUMBER

   68 $@14: %empty

   69 function_call: _ID $@14 _LPAREN argument _RPAREN

   70 argument: %empty
   71         | num_exp

   72 num_exp: exp
   73        | num_exp _AROP exp

   74 variable_list: %empty
   75              | variable_list variable

   76 $@15: %empty

   77 variable: _TYPE $@15 vars _SEMICOLON

   78 $@16: %empty

   79 class_variable: _TYPE $@16 class_line_vars _SEMICOLON

   80 class_line_vars: _ID
   81                | class_line_vars _COMMA _ID

   82 vars: _ID
   83     | vars _COMMA _ID

   84 return_statement: _RETURN num_exp _SEMICOLON
   85                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 20 28 32 60 77 79
_ACCESS_SPECIFIER (259) 6 28
_IF (260) 57
_ELSE (261) 55
_RETURN (262) 84 85
_ID (263) 20 24 28 32 45 48 49 51 52 60 63 69 80 81 82 83
_INT_NUMBER (264) 66
_UINT_NUMBER (265) 67
_CLASSNAME (266) 6 13 45
_LPAREN (267) 13 28 45 57 60 65 69
_RPAREN (268) 13 28 45 57 60 65 69
_LBRACKET (269) 7 13 33 53 60
_RBRACKET (270) 7 13 33 53 60
_ASSIGN (271) 24 45 52 60
_SEMICOLON (272) 24 45 51 52 60 77 79 84 85
_AROP (273) 73
_RELOP (274) 61
_COMMA (275) 18 49 81 83
_INC (276) 51 60
_WHILE (277)
_DO (278)
_PRIVATE (279)
_PROTECTED (280)
_PUBLIC (281)
_THIS (282) 24
_FOR (283) 60
_CONTIUNE (284)
_BREAK (285)
_NEW (286) 45
_CLASS (287) 6
_STATIC (288) 30
_DOT (289) 24
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1 2, on right: 0
class_list (38)
    on left: 3 4, on right: 2 4
class (39)
    on left: 6, on right: 3 4
@1 (40)
    on left: 5, on right: 6
class_statements (41)
    on left: 7, on right: 6
class_variable_list (42)
    on left: 8 9, on right: 7 9
constructor_list (43)
    on left: 10 11, on right: 7 11
constructor (44)
    on left: 13, on right: 11
$@2 (45)
    on left: 12, on right: 13
_constr_param_list (46)
    on left: 14 16, on right: 13
$@3 (47)
    on left: 15, on right: 16
_constr_with_params (48)
    on left: 17 18, on right: 16 18
_constr_param (49)
    on left: 20, on right: 17 18
$@4 (50)
    on left: 19, on right: 20
_constructor_body (51)
    on left: 21 22, on right: 13 22
_constructor_row (52)
    on left: 24, on right: 22
$@5 (53)
    on left: 23, on right: 24
function_list (54)
    on left: 25 26, on right: 7 26
function (55)
    on left: 28, on right: 26
@6 (56)
    on left: 27, on right: 28
static (57)
    on left: 29 30, on right: 28
parameter (58)
    on left: 31 32, on right: 28
func_body (59)
    on left: 33, on right: 28
statement_list (60)
    on left: 34 35, on right: 33 35 60
statement (61)
    on left: 36 37 38 39 40 41, on right: 35 53
make_object_statement (62)
    on left: 45, on right: 37
@7 (63)
    on left: 42, on right: 45
$@8 (64)
    on left: 43, on right: 45
$@9 (65)
    on left: 44, on right: 45
ids (66)
    on left: 46 47, on right: 45
id_list (67)
    on left: 48 49, on right: 47 49
inc_statement (68)
    on left: 51, on right: 38
$@10 (69)
    on left: 50, on right: 51
assignment_statement (70)
    on left: 52, on right: 39
compound_statement (71)
    on left: 53, on right: 55 57
if_statement (72)
    on left: 54 55, on right: 41
if_part (73)
    on left: 57, on right: 54 55
@11 (74)
    on left: 56, on right: 57
for_statement (75)
    on left: 60, on right: 36
$@12 (76)
    on left: 58, on right: 60
@13 (77)
    on left: 59, on right: 60
rel_exp (78)
    on left: 61, on right: 57 60
exp (79)
    on left: 62 63 64 65, on right: 72 73
literal (80)
    on left: 66 67, on right: 60 62
function_call (81)
    on left: 69, on right: 64
$@14 (82)
    on left: 68, on right: 69
argument (83)
    on left: 70 71, on right: 69
num_exp (84)
    on left: 72 73, on right: 52 61 65 71 73 84
variable_list (85)
    on left: 74 75, on right: 33 75
variable (86)
    on left: 77, on right: 75
$@15 (87)
    on left: 76, on right: 77
class_variable (88)
    on left: 79, on right: 9
$@16 (89)
    on left: 78, on right: 79
class_line_vars (90)
    on left: 80 81, on right: 79 81
vars (91)
    on left: 82 83, on right: 77 83
return_statement (92)
    on left: 84 85, on right: 40


State 0

    0 $accept: . program $end

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    6 class: _ACCESS_SPECIFIER . _CLASS _CLASSNAME @1 class_statements

    _CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: class_list .
    4 class_list: class_list . class

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    class  go to state 7


State 4

    3 class_list: class .

    $default  reduce using rule 3 (class_list)


State 5

    6 class: _ACCESS_SPECIFIER _CLASS . _CLASSNAME @1 class_statements

    _CLASSNAME  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 class_list: class_list class .

    $default  reduce using rule 4 (class_list)


State 8

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME . @1 class_statements

    $default  reduce using rule 5 (@1)

    @1  go to state 9


State 9

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 . class_statements

    _LBRACKET  shift, and go to state 10

    class_statements  go to state 11


State 10

    7 class_statements: _LBRACKET . class_variable_list constructor_list function_list _RBRACKET

    $default  reduce using rule 8 (class_variable_list)

    class_variable_list  go to state 12


State 11

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements .

    $default  reduce using rule 6 (class)


State 12

    7 class_statements: _LBRACKET class_variable_list . constructor_list function_list _RBRACKET
    9 class_variable_list: class_variable_list . class_variable

    _TYPE  shift, and go to state 13

    $default  reduce using rule 10 (constructor_list)

    constructor_list  go to state 14
    class_variable    go to state 15


State 13

   79 class_variable: _TYPE . $@16 class_line_vars _SEMICOLON

    $default  reduce using rule 78 ($@16)

    $@16  go to state 16


State 14

    7 class_statements: _LBRACKET class_variable_list constructor_list . function_list _RBRACKET
   11 constructor_list: constructor_list . constructor

    _CLASSNAME  shift, and go to state 17

    $default  reduce using rule 25 (function_list)

    constructor    go to state 18
    function_list  go to state 19


State 15

    9 class_variable_list: class_variable_list class_variable .

    $default  reduce using rule 9 (class_variable_list)


State 16

   79 class_variable: _TYPE $@16 . class_line_vars _SEMICOLON

    _ID  shift, and go to state 20

    class_line_vars  go to state 21


State 17

   13 constructor: _CLASSNAME . $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

    $default  reduce using rule 12 ($@2)

    $@2  go to state 22


State 18

   11 constructor_list: constructor_list constructor .

    $default  reduce using rule 11 (constructor_list)


State 19

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list . _RBRACKET
   26 function_list: function_list . function

    _ACCESS_SPECIFIER  shift, and go to state 23
    _RBRACKET          shift, and go to state 24

    function  go to state 25


State 20

   80 class_line_vars: _ID .

    $default  reduce using rule 80 (class_line_vars)


State 21

   79 class_variable: _TYPE $@16 class_line_vars . _SEMICOLON
   81 class_line_vars: class_line_vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 22

   13 constructor: _CLASSNAME $@2 . _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

    _LPAREN  shift, and go to state 28


State 23

   28 function: _ACCESS_SPECIFIER . static _TYPE _ID @6 _LPAREN parameter _RPAREN func_body

    _STATIC  shift, and go to state 29

    $default  reduce using rule 29 (static)

    static  go to state 30


State 24

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET .

    $default  reduce using rule 7 (class_statements)


State 25

   26 function_list: function_list function .

    $default  reduce using rule 26 (function_list)


State 26

   79 class_variable: _TYPE $@16 class_line_vars _SEMICOLON .

    $default  reduce using rule 79 (class_variable)


State 27

   81 class_line_vars: class_line_vars _COMMA . _ID

    _ID  shift, and go to state 31


State 28

   13 constructor: _CLASSNAME $@2 _LPAREN . _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET

    _TYPE     reduce using rule 15 ($@3)
    $default  reduce using rule 14 (_constr_param_list)

    _constr_param_list  go to state 32
    $@3                 go to state 33


State 29

   30 static: _STATIC .

    $default  reduce using rule 30 (static)


State 30

   28 function: _ACCESS_SPECIFIER static . _TYPE _ID @6 _LPAREN parameter _RPAREN func_body

    _TYPE  shift, and go to state 34


State 31

   81 class_line_vars: class_line_vars _COMMA _ID .

    $default  reduce using rule 81 (class_line_vars)


State 32

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list . _RPAREN _LBRACKET _constructor_body _RBRACKET

    _RPAREN  shift, and go to state 35


State 33

   16 _constr_param_list: $@3 . _constr_with_params

    _TYPE  shift, and go to state 36

    _constr_with_params  go to state 37
    _constr_param        go to state 38


State 34

   28 function: _ACCESS_SPECIFIER static _TYPE . _ID @6 _LPAREN parameter _RPAREN func_body

    _ID  shift, and go to state 39


State 35

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN . _LBRACKET _constructor_body _RBRACKET

    _LBRACKET  shift, and go to state 40


State 36

   20 _constr_param: _TYPE . $@4 _ID

    $default  reduce using rule 19 ($@4)

    $@4  go to state 41


State 37

   16 _constr_param_list: $@3 _constr_with_params .
   18 _constr_with_params: _constr_with_params . _COMMA _constr_param

    _COMMA  shift, and go to state 42

    $default  reduce using rule 16 (_constr_param_list)


State 38

   17 _constr_with_params: _constr_param .

    $default  reduce using rule 17 (_constr_with_params)


State 39

   28 function: _ACCESS_SPECIFIER static _TYPE _ID . @6 _LPAREN parameter _RPAREN func_body

    $default  reduce using rule 27 (@6)

    @6  go to state 43


State 40

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET . _constructor_body _RBRACKET

    $default  reduce using rule 21 (_constructor_body)

    _constructor_body  go to state 44


State 41

   20 _constr_param: _TYPE $@4 . _ID

    _ID  shift, and go to state 45


State 42

   18 _constr_with_params: _constr_with_params _COMMA . _constr_param

    _TYPE  shift, and go to state 36

    _constr_param  go to state 46


State 43

   28 function: _ACCESS_SPECIFIER static _TYPE _ID @6 . _LPAREN parameter _RPAREN func_body

    _LPAREN  shift, and go to state 47


State 44

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body . _RBRACKET
   22 _constructor_body: _constructor_body . _constructor_row

    _RBRACKET  shift, and go to state 48
    _THIS      shift, and go to state 49

    _constructor_row  go to state 50


State 45

   20 _constr_param: _TYPE $@4 _ID .

    $default  reduce using rule 20 (_constr_param)


State 46

   18 _constr_with_params: _constr_with_params _COMMA _constr_param .

    $default  reduce using rule 18 (_constr_with_params)


State 47

   28 function: _ACCESS_SPECIFIER static _TYPE _ID @6 _LPAREN . parameter _RPAREN func_body

    _TYPE  shift, and go to state 51

    $default  reduce using rule 31 (parameter)

    parameter  go to state 52


State 48

   13 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list _RPAREN _LBRACKET _constructor_body _RBRACKET .

    $default  reduce using rule 13 (constructor)


State 49

   24 _constructor_row: _THIS . _DOT _ID _ASSIGN _ID $@5 _SEMICOLON

    _DOT  shift, and go to state 53


State 50

   22 _constructor_body: _constructor_body _constructor_row .

    $default  reduce using rule 22 (_constructor_body)


State 51

   32 parameter: _TYPE . _ID

    _ID  shift, and go to state 54


State 52

   28 function: _ACCESS_SPECIFIER static _TYPE _ID @6 _LPAREN parameter . _RPAREN func_body

    _RPAREN  shift, and go to state 55


State 53

   24 _constructor_row: _THIS _DOT . _ID _ASSIGN _ID $@5 _SEMICOLON

    _ID  shift, and go to state 56


State 54

   32 parameter: _TYPE _ID .

    $default  reduce using rule 32 (parameter)


State 55

   28 function: _ACCESS_SPECIFIER static _TYPE _ID @6 _LPAREN parameter _RPAREN . func_body

    _LBRACKET  shift, and go to state 57

    func_body  go to state 58


State 56

   24 _constructor_row: _THIS _DOT _ID . _ASSIGN _ID $@5 _SEMICOLON

    _ASSIGN  shift, and go to state 59


State 57

   33 func_body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 74 (variable_list)

    variable_list  go to state 60


State 58

   28 function: _ACCESS_SPECIFIER static _TYPE _ID @6 _LPAREN parameter _RPAREN func_body .

    $default  reduce using rule 28 (function)


State 59

   24 _constructor_row: _THIS _DOT _ID _ASSIGN . _ID $@5 _SEMICOLON

    _ID  shift, and go to state 61


State 60

   33 func_body: _LBRACKET variable_list . statement_list _RBRACKET
   75 variable_list: variable_list . variable

    _TYPE  shift, and go to state 62

    $default  reduce using rule 34 (statement_list)

    statement_list  go to state 63
    variable        go to state 64


State 61

   24 _constructor_row: _THIS _DOT _ID _ASSIGN _ID . $@5 _SEMICOLON

    $default  reduce using rule 23 ($@5)

    $@5  go to state 65


State 62

   77 variable: _TYPE . $@15 vars _SEMICOLON

    $default  reduce using rule 76 ($@15)

    $@15  go to state 66


State 63

   33 func_body: _LBRACKET variable_list statement_list . _RBRACKET
   35 statement_list: statement_list . statement

    _IF         shift, and go to state 67
    _RETURN     shift, and go to state 68
    _ID         shift, and go to state 69
    _CLASSNAME  shift, and go to state 70
    _RBRACKET   shift, and go to state 71
    _FOR        shift, and go to state 72

    statement              go to state 73
    make_object_statement  go to state 74
    inc_statement          go to state 75
    assignment_statement   go to state 76
    if_statement           go to state 77
    if_part                go to state 78
    for_statement          go to state 79
    return_statement       go to state 80


State 64

   75 variable_list: variable_list variable .

    $default  reduce using rule 75 (variable_list)


State 65

   24 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@5 . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 66

   77 variable: _TYPE $@15 . vars _SEMICOLON

    _ID  shift, and go to state 82

    vars  go to state 83


State 67

   57 if_part: _IF . _LPAREN @11 rel_exp _RPAREN compound_statement

    _LPAREN  shift, and go to state 84


State 68

   84 return_statement: _RETURN . num_exp _SEMICOLON
   85                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88
    _SEMICOLON    shift, and go to state 89

    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    num_exp        go to state 93


State 69

   51 inc_statement: _ID . $@10 _INC _SEMICOLON
   52 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 94

    $default  reduce using rule 50 ($@10)

    $@10  go to state 95


State 70

   45 make_object_statement: _CLASSNAME . @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 42 (@7)

    @7  go to state 96


State 71

   33 func_body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 33 (func_body)


State 72

   60 for_statement: _FOR . _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _LPAREN  shift, and go to state 97


State 73

   35 statement_list: statement_list statement .

    $default  reduce using rule 35 (statement_list)


State 74

   37 statement: make_object_statement .

    $default  reduce using rule 37 (statement)


State 75

   38 statement: inc_statement .

    $default  reduce using rule 38 (statement)


State 76

   39 statement: assignment_statement .

    $default  reduce using rule 39 (statement)


State 77

   41 statement: if_statement .

    $default  reduce using rule 41 (statement)


State 78

   54 if_statement: if_part .
   55             | if_part . _ELSE compound_statement

    _ELSE  shift, and go to state 98

    $default  reduce using rule 54 (if_statement)


State 79

   36 statement: for_statement .

    $default  reduce using rule 36 (statement)


State 80

   40 statement: return_statement .

    $default  reduce using rule 40 (statement)


State 81

   24 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@5 _SEMICOLON .

    $default  reduce using rule 24 (_constructor_row)


State 82

   82 vars: _ID .

    $default  reduce using rule 82 (vars)


State 83

   77 variable: _TYPE $@15 vars . _SEMICOLON
   83 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 99
    _COMMA      shift, and go to state 100


State 84

   57 if_part: _IF _LPAREN . @11 rel_exp _RPAREN compound_statement

    $default  reduce using rule 56 (@11)

    @11  go to state 101


State 85

   63 exp: _ID .
   69 function_call: _ID . $@14 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 68 ($@14)
    $default  reduce using rule 63 (exp)

    $@14  go to state 102


State 86

   66 literal: _INT_NUMBER .

    $default  reduce using rule 66 (literal)


State 87

   67 literal: _UINT_NUMBER .

    $default  reduce using rule 67 (literal)


State 88

   65 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    num_exp        go to state 103


State 89

   85 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 85 (return_statement)


State 90

   72 num_exp: exp .

    $default  reduce using rule 72 (num_exp)


State 91

   62 exp: literal .

    $default  reduce using rule 62 (exp)


State 92

   64 exp: function_call .

    $default  reduce using rule 64 (exp)


State 93

   73 num_exp: num_exp . _AROP exp
   84 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 104
    _AROP       shift, and go to state 105


State 94

   52 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    num_exp        go to state 106


State 95

   51 inc_statement: _ID $@10 . _INC _SEMICOLON

    _INC  shift, and go to state 107


State 96

   45 make_object_statement: _CLASSNAME @7 . _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

    _ID  shift, and go to state 108


State 97

   60 for_statement: _FOR _LPAREN . _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _TYPE  shift, and go to state 109


State 98

   55 if_statement: if_part _ELSE . compound_statement

    _LBRACKET  shift, and go to state 110

    compound_statement  go to state 111


State 99

   77 variable: _TYPE $@15 vars _SEMICOLON .

    $default  reduce using rule 77 (variable)


State 100

   83 vars: vars _COMMA . _ID

    _ID  shift, and go to state 112


State 101

   57 if_part: _IF _LPAREN @11 . rel_exp _RPAREN compound_statement

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    rel_exp        go to state 113
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    num_exp        go to state 114


State 102

   69 function_call: _ID $@14 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 115


State 103

   65 exp: _LPAREN num_exp . _RPAREN
   73 num_exp: num_exp . _AROP exp

    _RPAREN  shift, and go to state 116
    _AROP    shift, and go to state 105


State 104

   84 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 84 (return_statement)


State 105

   73 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    exp            go to state 117
    literal        go to state 91
    function_call  go to state 92


State 106

   52 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   73 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 118
    _AROP       shift, and go to state 105


State 107

   51 inc_statement: _ID $@10 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 119


State 108

   45 make_object_statement: _CLASSNAME @7 _ID . $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 43 ($@8)

    $@8  go to state 120


State 109

   60 for_statement: _FOR _LPAREN _TYPE . _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _ID  shift, and go to state 121


State 110

   53 compound_statement: _LBRACKET . statement _RBRACKET

    _IF         shift, and go to state 67
    _RETURN     shift, and go to state 68
    _ID         shift, and go to state 69
    _CLASSNAME  shift, and go to state 70
    _FOR        shift, and go to state 72

    statement              go to state 122
    make_object_statement  go to state 74
    inc_statement          go to state 75
    assignment_statement   go to state 76
    if_statement           go to state 77
    if_part                go to state 78
    for_statement          go to state 79
    return_statement       go to state 80


State 111

   55 if_statement: if_part _ELSE compound_statement .

    $default  reduce using rule 55 (if_statement)


State 112

   83 vars: vars _COMMA _ID .

    $default  reduce using rule 83 (vars)


State 113

   57 if_part: _IF _LPAREN @11 rel_exp . _RPAREN compound_statement

    _RPAREN  shift, and go to state 123


State 114

   61 rel_exp: num_exp . _RELOP num_exp
   73 num_exp: num_exp . _AROP exp

    _AROP   shift, and go to state 105
    _RELOP  shift, and go to state 124


State 115

   69 function_call: _ID $@14 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    $default  reduce using rule 70 (argument)

    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    argument       go to state 125
    num_exp        go to state 126


State 116

   65 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 65 (exp)


State 117

   73 num_exp: num_exp _AROP exp .

    $default  reduce using rule 73 (num_exp)


State 118

   52 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 52 (assignment_statement)


State 119

   51 inc_statement: _ID $@10 _INC _SEMICOLON .

    $default  reduce using rule 51 (inc_statement)


State 120

   45 make_object_statement: _CLASSNAME @7 _ID $@8 . _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

    _ASSIGN  shift, and go to state 127


State 121

   60 for_statement: _FOR _LPAREN _TYPE _ID . $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    $default  reduce using rule 58 ($@12)

    $@12  go to state 128


State 122

   53 compound_statement: _LBRACKET statement . _RBRACKET

    _RBRACKET  shift, and go to state 129


State 123

   57 if_part: _IF _LPAREN @11 rel_exp _RPAREN . compound_statement

    _LBRACKET  shift, and go to state 110

    compound_statement  go to state 130


State 124

   61 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    num_exp        go to state 131


State 125

   69 function_call: _ID $@14 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 132


State 126

   71 argument: num_exp .
   73 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 105

    $default  reduce using rule 71 (argument)


State 127

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN . _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

    _NEW  shift, and go to state 133


State 128

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 . _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _ASSIGN  shift, and go to state 134


State 129

   53 compound_statement: _LBRACKET statement _RBRACKET .

    $default  reduce using rule 53 (compound_statement)


State 130

   57 if_part: _IF _LPAREN @11 rel_exp _RPAREN compound_statement .

    $default  reduce using rule 57 (if_part)


State 131

   61 rel_exp: num_exp _RELOP num_exp .
   73 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 105

    $default  reduce using rule 61 (rel_exp)


State 132

   69 function_call: _ID $@14 _LPAREN argument _RPAREN .

    $default  reduce using rule 69 (function_call)


State 133

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW . _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON

    _CLASSNAME  shift, and go to state 135


State 134

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN . literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87

    literal  go to state 136


State 135

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME . $@9 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 44 ($@9)

    $@9  go to state 137


State 136

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal . _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 138


State 137

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 . _LPAREN ids _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 139


State 138

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON . rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _ID           shift, and go to state 85
    _INT_NUMBER   shift, and go to state 86
    _UINT_NUMBER  shift, and go to state 87
    _LPAREN       shift, and go to state 88

    rel_exp        go to state 140
    exp            go to state 90
    literal        go to state 91
    function_call  go to state 92
    num_exp        go to state 114


State 139

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN . ids _RPAREN _SEMICOLON

    _ID  shift, and go to state 141

    $default  reduce using rule 46 (ids)

    ids      go to state 142
    id_list  go to state 143


State 140

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp . _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 144


State 141

   48 id_list: _ID .

    $default  reduce using rule 48 (id_list)


State 142

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 145


State 143

   47 ids: id_list .
   49 id_list: id_list . _COMMA _ID

    _COMMA  shift, and go to state 146

    $default  reduce using rule 47 (ids)


State 144

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON . _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _ID  shift, and go to state 147


State 145

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 148


State 146

   49 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 149


State 147

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID . _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _INC  shift, and go to state 150


State 148

   45 make_object_statement: _CLASSNAME @7 _ID $@8 _ASSIGN _NEW _CLASSNAME $@9 _LPAREN ids _RPAREN _SEMICOLON .

    $default  reduce using rule 45 (make_object_statement)


State 149

   49 id_list: id_list _COMMA _ID .

    $default  reduce using rule 49 (id_list)


State 150

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC . _RPAREN _LBRACKET @13 statement_list _RBRACKET

    _RPAREN  shift, and go to state 151


State 151

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN . _LBRACKET @13 statement_list _RBRACKET

    _LBRACKET  shift, and go to state 152


State 152

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET . @13 statement_list _RBRACKET

    $default  reduce using rule 59 (@13)

    @13  go to state 153


State 153

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 . statement_list _RBRACKET

    $default  reduce using rule 34 (statement_list)

    statement_list  go to state 154


State 154

   35 statement_list: statement_list . statement
   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list . _RBRACKET

    _IF         shift, and go to state 67
    _RETURN     shift, and go to state 68
    _ID         shift, and go to state 69
    _CLASSNAME  shift, and go to state 70
    _RBRACKET   shift, and go to state 155
    _FOR        shift, and go to state 72

    statement              go to state 73
    make_object_statement  go to state 74
    inc_statement          go to state 75
    assignment_statement   go to state 76
    if_statement           go to state 77
    if_part                go to state 78
    for_statement          go to state 79
    return_statement       go to state 80


State 155

   60 for_statement: _FOR _LPAREN _TYPE _ID $@12 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @13 statement_list _RBRACKET .

    $default  reduce using rule 60 (for_statement)
