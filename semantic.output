Terminals unused in grammar

   _WHILE
   _DO
   _PRIVATE
   _PROTECTED
   _PUBLIC
   _THIS
   _CONTIUNE
   _BREAK
   _NEW


State 12 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class_list

    3 class_list: class
    4           | class_list class

    5 @1: %empty

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements

    7 class_statements: _LBRACKET class_variable_list function_list _RBRACKET

    8 class_variable_list: %empty
    9                    | class_variable_list class_variable

   10 function_list: %empty
   11              | function_list function

   12 $@2: %empty

   13 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body

   14 static: %empty
   15       | _STATIC

   16 parameter: %empty
   17          | _TYPE _ID

   18 func_body: _LBRACKET variable_list statement_list _RBRACKET

   19 statement_list: %empty
   20               | statement_list statement

   21 statement: for_statement
   22          | if_statement
   23          | inc_statement
   24          | assignment_statement
   25          | return_statement

   26 if_statement: if_part
   27             | if_part _ELSE _LBRACKET statement_list _RBRACKET

   28 if_part: _IF _LPAREN rel_exp _RPAREN _LBRACKET statement_list _RBRACKET

   29 $@3: %empty

   30 inc_statement: _ID $@3 _INC _SEMICOLON

   31 $@4: %empty

   32 @5: %empty

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

   34 rel_exp: num_exp _RELOP num_exp

   35 exp: literal
   36    | _ID
   37    | function_call
   38    | _LPAREN num_exp _RPAREN

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 $@6: %empty

   42 function_call: _ID $@6 _LPAREN argument _RPAREN

   43 argument: %empty
   44         | num_exp

   45 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   46 num_exp: exp
   47        | num_exp _AROP exp

   48 variable_list: %empty
   49              | variable_list variable

   50 $@7: %empty

   51 variable: _TYPE $@7 vars _SEMICOLON

   52 $@8: %empty

   53 class_variable: _ACCESS_SPECIFIER _TYPE $@8 class_line_vars _SEMICOLON

   54 class_line_vars: _ID
   55                | class_line_vars _COMMA _ID

   56 vars: _ID
   57     | vars _COMMA _ID

   58 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 13 17 33 51 53
_ACCESS_SPECIFIER (259) 6 13 53
_IF (260) 28
_ELSE (261) 27
_RETURN (262) 58
_ID (263) 13 17 30 33 36 42 45 54 55 56 57
_INT_NUMBER (264) 39
_UINT_NUMBER (265) 40
_CLASSNAME (266) 6
_LPAREN (267) 13 28 33 38 42
_RPAREN (268) 13 28 33 38 42
_LBRACKET (269) 7 18 27 28 33
_RBRACKET (270) 7 18 27 28 33
_ASSIGN (271) 33 45
_SEMICOLON (272) 30 33 45 51 53 58
_AROP (273) 47
_RELOP (274) 34
_COMMA (275) 55 57
_INC (276) 30 33
_WHILE (277)
_DO (278)
_PRIVATE (279)
_PROTECTED (280)
_PUBLIC (281)
_THIS (282)
_FOR (283) 33
_CONTIUNE (284)
_BREAK (285)
_NEW (286)
_CLASS (287) 6
_STATIC (288) 15
ONLY_IF (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1 2, on right: 0
class_list (37)
    on left: 3 4, on right: 2 4
class (38)
    on left: 6, on right: 3 4
@1 (39)
    on left: 5, on right: 6
class_statements (40)
    on left: 7, on right: 6
class_variable_list (41)
    on left: 8 9, on right: 7 9
function_list (42)
    on left: 10 11, on right: 7 11
function (43)
    on left: 13, on right: 11
$@2 (44)
    on left: 12, on right: 13
static (45)
    on left: 14 15, on right: 13
parameter (46)
    on left: 16 17, on right: 13
func_body (47)
    on left: 18, on right: 13
statement_list (48)
    on left: 19 20, on right: 18 20 27 28 33
statement (49)
    on left: 21 22 23 24 25, on right: 20
if_statement (50)
    on left: 26 27, on right: 22
if_part (51)
    on left: 28, on right: 26 27
inc_statement (52)
    on left: 30, on right: 23
$@3 (53)
    on left: 29, on right: 30
for_statement (54)
    on left: 33, on right: 21
$@4 (55)
    on left: 31, on right: 33
@5 (56)
    on left: 32, on right: 33
rel_exp (57)
    on left: 34, on right: 28 33
exp (58)
    on left: 35 36 37 38, on right: 46 47
literal (59)
    on left: 39 40, on right: 33 35
function_call (60)
    on left: 42, on right: 37
$@6 (61)
    on left: 41, on right: 42
argument (62)
    on left: 43 44, on right: 42
assignment_statement (63)
    on left: 45, on right: 24
num_exp (64)
    on left: 46 47, on right: 34 38 44 45 47 58
variable_list (65)
    on left: 48 49, on right: 18 49
variable (66)
    on left: 51, on right: 49
$@7 (67)
    on left: 50, on right: 51
class_variable (68)
    on left: 53, on right: 9
$@8 (69)
    on left: 52, on right: 53
class_line_vars (70)
    on left: 54 55, on right: 53 55
vars (71)
    on left: 56 57, on right: 51 57
return_statement (72)
    on left: 58, on right: 25


State 0

    0 $accept: . program $end

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    6 class: _ACCESS_SPECIFIER . _CLASS _CLASSNAME @1 class_statements

    _CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: class_list .
    4 class_list: class_list . class

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    class  go to state 7


State 4

    3 class_list: class .

    $default  reduce using rule 3 (class_list)


State 5

    6 class: _ACCESS_SPECIFIER _CLASS . _CLASSNAME @1 class_statements

    _CLASSNAME  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 class_list: class_list class .

    $default  reduce using rule 4 (class_list)


State 8

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME . @1 class_statements

    $default  reduce using rule 5 (@1)

    @1  go to state 9


State 9

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 . class_statements

    _LBRACKET  shift, and go to state 10

    class_statements  go to state 11


State 10

    7 class_statements: _LBRACKET . class_variable_list function_list _RBRACKET

    $default  reduce using rule 8 (class_variable_list)

    class_variable_list  go to state 12


State 11

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements .

    $default  reduce using rule 6 (class)


State 12

    7 class_statements: _LBRACKET class_variable_list . function_list _RBRACKET
    9 class_variable_list: class_variable_list . class_variable

    _ACCESS_SPECIFIER  shift, and go to state 13

    _ACCESS_SPECIFIER  [reduce using rule 10 (function_list)]
    $default           reduce using rule 10 (function_list)

    function_list   go to state 14
    class_variable  go to state 15


State 13

   53 class_variable: _ACCESS_SPECIFIER . _TYPE $@8 class_line_vars _SEMICOLON

    _TYPE  shift, and go to state 16


State 14

    7 class_statements: _LBRACKET class_variable_list function_list . _RBRACKET
   11 function_list: function_list . function

    _ACCESS_SPECIFIER  shift, and go to state 17
    _RBRACKET          shift, and go to state 18

    function  go to state 19


State 15

    9 class_variable_list: class_variable_list class_variable .

    $default  reduce using rule 9 (class_variable_list)


State 16

   53 class_variable: _ACCESS_SPECIFIER _TYPE . $@8 class_line_vars _SEMICOLON

    $default  reduce using rule 52 ($@8)

    $@8  go to state 20


State 17

   13 function: _ACCESS_SPECIFIER . static _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body

    _STATIC  shift, and go to state 21

    $default  reduce using rule 14 (static)

    static  go to state 22


State 18

    7 class_statements: _LBRACKET class_variable_list function_list _RBRACKET .

    $default  reduce using rule 7 (class_statements)


State 19

   11 function_list: function_list function .

    $default  reduce using rule 11 (function_list)


State 20

   53 class_variable: _ACCESS_SPECIFIER _TYPE $@8 . class_line_vars _SEMICOLON

    _ID  shift, and go to state 23

    class_line_vars  go to state 24


State 21

   15 static: _STATIC .

    $default  reduce using rule 15 (static)


State 22

   13 function: _ACCESS_SPECIFIER static . _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body

    _TYPE  shift, and go to state 25


State 23

   54 class_line_vars: _ID .

    $default  reduce using rule 54 (class_line_vars)


State 24

   53 class_variable: _ACCESS_SPECIFIER _TYPE $@8 class_line_vars . _SEMICOLON
   55 class_line_vars: class_line_vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 25

   13 function: _ACCESS_SPECIFIER static _TYPE . _ID $@2 _LPAREN parameter _RPAREN func_body

    _ID  shift, and go to state 28


State 26

   53 class_variable: _ACCESS_SPECIFIER _TYPE $@8 class_line_vars _SEMICOLON .

    $default  reduce using rule 53 (class_variable)


State 27

   55 class_line_vars: class_line_vars _COMMA . _ID

    _ID  shift, and go to state 29


State 28

   13 function: _ACCESS_SPECIFIER static _TYPE _ID . $@2 _LPAREN parameter _RPAREN func_body

    $default  reduce using rule 12 ($@2)

    $@2  go to state 30


State 29

   55 class_line_vars: class_line_vars _COMMA _ID .

    $default  reduce using rule 55 (class_line_vars)


State 30

   13 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 . _LPAREN parameter _RPAREN func_body

    _LPAREN  shift, and go to state 31


State 31

   13 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN . parameter _RPAREN func_body

    _TYPE  shift, and go to state 32

    $default  reduce using rule 16 (parameter)

    parameter  go to state 33


State 32

   17 parameter: _TYPE . _ID

    _ID  shift, and go to state 34


State 33

   13 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter . _RPAREN func_body

    _RPAREN  shift, and go to state 35


State 34

   17 parameter: _TYPE _ID .

    $default  reduce using rule 17 (parameter)


State 35

   13 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter _RPAREN . func_body

    _LBRACKET  shift, and go to state 36

    func_body  go to state 37


State 36

   18 func_body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 48 (variable_list)

    variable_list  go to state 38


State 37

   13 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body .

    $default  reduce using rule 13 (function)


State 38

   18 func_body: _LBRACKET variable_list . statement_list _RBRACKET
   49 variable_list: variable_list . variable

    _TYPE  shift, and go to state 39

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 40
    variable        go to state 41


State 39

   51 variable: _TYPE . $@7 vars _SEMICOLON

    $default  reduce using rule 50 ($@7)

    $@7  go to state 42


State 40

   18 func_body: _LBRACKET variable_list statement_list . _RBRACKET
   20 statement_list: statement_list . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _RBRACKET  shift, and go to state 46
    _FOR       shift, and go to state 47

    statement             go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    inc_statement         go to state 51
    for_statement         go to state 52
    assignment_statement  go to state 53
    return_statement      go to state 54


State 41

   49 variable_list: variable_list variable .

    $default  reduce using rule 49 (variable_list)


State 42

   51 variable: _TYPE $@7 . vars _SEMICOLON

    _ID  shift, and go to state 55

    vars  go to state 56


State 43

   28 if_part: _IF . _LPAREN rel_exp _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 57


State 44

   58 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    num_exp        go to state 65


State 45

   30 inc_statement: _ID . $@3 _INC _SEMICOLON
   45 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 66

    $default  reduce using rule 29 ($@3)

    $@3  go to state 67


State 46

   18 func_body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 18 (func_body)


State 47

   33 for_statement: _FOR . _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _LPAREN  shift, and go to state 68


State 48

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 49

   22 statement: if_statement .

    $default  reduce using rule 22 (statement)


State 50

   26 if_statement: if_part .
   27             | if_part . _ELSE _LBRACKET statement_list _RBRACKET

    _ELSE  shift, and go to state 69

    $default  reduce using rule 26 (if_statement)


State 51

   23 statement: inc_statement .

    $default  reduce using rule 23 (statement)


State 52

   21 statement: for_statement .

    $default  reduce using rule 21 (statement)


State 53

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 54

   25 statement: return_statement .

    $default  reduce using rule 25 (statement)


State 55

   56 vars: _ID .

    $default  reduce using rule 56 (vars)


State 56

   51 variable: _TYPE $@7 vars . _SEMICOLON
   57 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 70
    _COMMA      shift, and go to state 71


State 57

   28 if_part: _IF _LPAREN . rel_exp _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    rel_exp        go to state 72
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    num_exp        go to state 73


State 58

   36 exp: _ID .
   42 function_call: _ID . $@6 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 41 ($@6)
    $default  reduce using rule 36 (exp)

    $@6  go to state 74


State 59

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 60

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 61

   38 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    num_exp        go to state 75


State 62

   46 num_exp: exp .

    $default  reduce using rule 46 (num_exp)


State 63

   35 exp: literal .

    $default  reduce using rule 35 (exp)


State 64

   37 exp: function_call .

    $default  reduce using rule 37 (exp)


State 65

   47 num_exp: num_exp . _AROP exp
   58 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 77


State 66

   45 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    num_exp        go to state 78


State 67

   30 inc_statement: _ID $@3 . _INC _SEMICOLON

    _INC  shift, and go to state 79


State 68

   33 for_statement: _FOR _LPAREN . _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _TYPE  shift, and go to state 80


State 69

   27 if_statement: if_part _ELSE . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 81


State 70

   51 variable: _TYPE $@7 vars _SEMICOLON .

    $default  reduce using rule 51 (variable)


State 71

   57 vars: vars _COMMA . _ID

    _ID  shift, and go to state 82


State 72

   28 if_part: _IF _LPAREN rel_exp . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 83


State 73

   34 rel_exp: num_exp . _RELOP num_exp
   47 num_exp: num_exp . _AROP exp

    _AROP   shift, and go to state 77
    _RELOP  shift, and go to state 84


State 74

   42 function_call: _ID $@6 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 85


State 75

   38 exp: _LPAREN num_exp . _RPAREN
   47 num_exp: num_exp . _AROP exp

    _RPAREN  shift, and go to state 86
    _AROP    shift, and go to state 77


State 76

   58 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 58 (return_statement)


State 77

   47 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 87
    literal        go to state 63
    function_call  go to state 64


State 78

   45 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   47 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 88
    _AROP       shift, and go to state 77


State 79

   30 inc_statement: _ID $@3 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 89


State 80

   33 for_statement: _FOR _LPAREN _TYPE . _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ID  shift, and go to state 90


State 81

   27 if_statement: if_part _ELSE _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 91


State 82

   57 vars: vars _COMMA _ID .

    $default  reduce using rule 57 (vars)


State 83

   28 if_part: _IF _LPAREN rel_exp _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 92


State 84

   34 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    num_exp        go to state 93


State 85

   42 function_call: _ID $@6 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    $default  reduce using rule 43 (argument)

    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    argument       go to state 94
    num_exp        go to state 95


State 86

   38 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 38 (exp)


State 87

   47 num_exp: num_exp _AROP exp .

    $default  reduce using rule 47 (num_exp)


State 88

   45 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 45 (assignment_statement)


State 89

   30 inc_statement: _ID $@3 _INC _SEMICOLON .

    $default  reduce using rule 30 (inc_statement)


State 90

   33 for_statement: _FOR _LPAREN _TYPE _ID . $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    $default  reduce using rule 31 ($@4)

    $@4  go to state 96


State 91

   20 statement_list: statement_list . statement
   27 if_statement: if_part _ELSE _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _RBRACKET  shift, and go to state 97
    _FOR       shift, and go to state 47

    statement             go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    inc_statement         go to state 51
    for_statement         go to state 52
    assignment_statement  go to state 53
    return_statement      go to state 54


State 92

   28 if_part: _IF _LPAREN rel_exp _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 98


State 93

   34 rel_exp: num_exp _RELOP num_exp .
   47 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 77

    $default  reduce using rule 34 (rel_exp)


State 94

   42 function_call: _ID $@6 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 99


State 95

   44 argument: num_exp .
   47 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 77

    $default  reduce using rule 44 (argument)


State 96

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 . _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ASSIGN  shift, and go to state 100


State 97

   27 if_statement: if_part _ELSE _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 27 (if_statement)


State 98

   20 statement_list: statement_list . statement
   28 if_part: _IF _LPAREN rel_exp _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _RBRACKET  shift, and go to state 101
    _FOR       shift, and go to state 47

    statement             go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    inc_statement         go to state 51
    for_statement         go to state 52
    assignment_statement  go to state 53
    return_statement      go to state 54


State 99

   42 function_call: _ID $@6 _LPAREN argument _RPAREN .

    $default  reduce using rule 42 (function_call)


State 100

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN . literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 102


State 101

   28 if_part: _IF _LPAREN rel_exp _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 28 (if_part)


State 102

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal . _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 103


State 103

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON . rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    rel_exp        go to state 104
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    num_exp        go to state 73


State 104

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp . _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 105


State 105

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON . _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ID  shift, and go to state 106


State 106

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID . _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _INC  shift, and go to state 107


State 107

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC . _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _RPAREN  shift, and go to state 108


State 108

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN . _LBRACKET @5 statement_list _RBRACKET

    _LBRACKET  shift, and go to state 109


State 109

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET . @5 statement_list _RBRACKET

    $default  reduce using rule 32 (@5)

    @5  go to state 110


State 110

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 111


State 111

   20 statement_list: statement_list . statement
   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list . _RBRACKET

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _RBRACKET  shift, and go to state 112
    _FOR       shift, and go to state 47

    statement             go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    inc_statement         go to state 51
    for_statement         go to state 52
    assignment_statement  go to state 53
    return_statement      go to state 54


State 112

   33 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET .

    $default  reduce using rule 33 (for_statement)
