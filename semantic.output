Terminals unused in grammar

   _IF
   _ELSE
   _RETURN
   _WHILE
   _DO
   _PRIVATE
   _PROTECTED
   _PUBLIC
   _CONTIUNE
   _BREAK
   ONLY_IF


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class_list

    3 class_list: class
    4           | class_list class

    5 @1: %empty

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET

    8 class_variable_list: %empty
    9                    | class_variable_list class_variable

   10 constructor_list: %empty
   11                 | constructor_list constructor

   12 $@2: %empty

   13 $@3: %empty

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list $@3 _RPAREN _LBRACKET _constructor_body _RBRACKET

   15 _constr_param_list: %empty
   16                   | _constr_with_params

   17 _constr_with_params: _constr_param
   18                    | _constr_with_params _COMMA _constr_param

   19 _constr_param: _TYPE _ID

   20 _constructor_body: %empty
   21                  | _constructor_body _constructor_row

   22 $@4: %empty

   23 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@4 _SEMICOLON

   24 function_list: %empty
   25              | function_list function

   26 @5: %empty

   27 function: _ACCESS_SPECIFIER static _TYPE _ID @5 _LPAREN parameter _RPAREN func_body

   28 static: %empty
   29       | _STATIC

   30 parameter: %empty
   31          | _TYPE _ID

   32 func_body: _LBRACKET variable_list statement_list _RBRACKET

   33 statement_list: %empty
   34               | statement_list statement

   35 statement: for_statement
   36          | make_object_statement
   37          | inc_statement
   38          | assignment_statement

   39 @6: %empty

   40 $@7: %empty

   41 $@8: %empty

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

   43 ids: %empty
   44    | id_list

   45 id_list: _ID
   46        | id_list _COMMA _ID

   47 $@9: %empty

   48 inc_statement: _ID $@9 _INC _SEMICOLON

   49 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   50 $@10: %empty

   51 @11: %empty

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

   53 rel_exp: num_exp _RELOP num_exp

   54 exp: literal
   55    | _ID
   56    | function_call
   57    | _LPAREN num_exp _RPAREN

   58 literal: _INT_NUMBER
   59        | _UINT_NUMBER

   60 $@12: %empty

   61 function_call: _ID $@12 _LPAREN argument _RPAREN

   62 argument: %empty
   63         | num_exp

   64 num_exp: exp
   65        | num_exp _AROP exp

   66 variable_list: %empty
   67              | variable_list variable

   68 $@13: %empty

   69 variable: _TYPE $@13 vars _SEMICOLON

   70 $@14: %empty

   71 class_variable: _TYPE $@14 class_line_vars _SEMICOLON

   72 class_line_vars: _ID
   73                | class_line_vars _COMMA _ID

   74 vars: _ID
   75     | vars _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 19 27 31 52 69 71
_ACCESS_SPECIFIER (259) 6 27
_IF (260)
_ELSE (261)
_RETURN (262)
_ID (263) 19 23 27 31 42 45 46 48 49 52 55 61 72 73 74 75
_INT_NUMBER (264) 58
_UINT_NUMBER (265) 59
_CLASSNAME (266) 6 14 42
_LPAREN (267) 14 27 42 52 57 61
_RPAREN (268) 14 27 42 52 57 61
_LBRACKET (269) 7 14 32 52
_RBRACKET (270) 7 14 32 52
_ASSIGN (271) 23 42 49 52
_SEMICOLON (272) 23 42 48 49 52 69 71
_AROP (273) 65
_RELOP (274) 53
_COMMA (275) 18 46 73 75
_INC (276) 48 52
_WHILE (277)
_DO (278)
_PRIVATE (279)
_PROTECTED (280)
_PUBLIC (281)
_THIS (282) 23
_FOR (283) 52
_CONTIUNE (284)
_BREAK (285)
_NEW (286) 42
_CLASS (287) 6
_STATIC (288) 29
_DOT (289) 23
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1 2, on right: 0
class_list (38)
    on left: 3 4, on right: 2 4
class (39)
    on left: 6, on right: 3 4
@1 (40)
    on left: 5, on right: 6
class_statements (41)
    on left: 7, on right: 6
class_variable_list (42)
    on left: 8 9, on right: 7 9
constructor_list (43)
    on left: 10 11, on right: 7 11
constructor (44)
    on left: 14, on right: 11
$@2 (45)
    on left: 12, on right: 14
$@3 (46)
    on left: 13, on right: 14
_constr_param_list (47)
    on left: 15 16, on right: 14
_constr_with_params (48)
    on left: 17 18, on right: 16 18
_constr_param (49)
    on left: 19, on right: 17 18
_constructor_body (50)
    on left: 20 21, on right: 14 21
_constructor_row (51)
    on left: 23, on right: 21
$@4 (52)
    on left: 22, on right: 23
function_list (53)
    on left: 24 25, on right: 7 25
function (54)
    on left: 27, on right: 25
@5 (55)
    on left: 26, on right: 27
static (56)
    on left: 28 29, on right: 27
parameter (57)
    on left: 30 31, on right: 27
func_body (58)
    on left: 32, on right: 27
statement_list (59)
    on left: 33 34, on right: 32 34 52
statement (60)
    on left: 35 36 37 38, on right: 34
make_object_statement (61)
    on left: 42, on right: 36
@6 (62)
    on left: 39, on right: 42
$@7 (63)
    on left: 40, on right: 42
$@8 (64)
    on left: 41, on right: 42
ids (65)
    on left: 43 44, on right: 42
id_list (66)
    on left: 45 46, on right: 44 46
inc_statement (67)
    on left: 48, on right: 37
$@9 (68)
    on left: 47, on right: 48
assignment_statement (69)
    on left: 49, on right: 38
for_statement (70)
    on left: 52, on right: 35
$@10 (71)
    on left: 50, on right: 52
@11 (72)
    on left: 51, on right: 52
rel_exp (73)
    on left: 53, on right: 52
exp (74)
    on left: 54 55 56 57, on right: 64 65
literal (75)
    on left: 58 59, on right: 52 54
function_call (76)
    on left: 61, on right: 56
$@12 (77)
    on left: 60, on right: 61
argument (78)
    on left: 62 63, on right: 61
num_exp (79)
    on left: 64 65, on right: 49 53 57 63 65
variable_list (80)
    on left: 66 67, on right: 32 67
variable (81)
    on left: 69, on right: 67
$@13 (82)
    on left: 68, on right: 69
class_variable (83)
    on left: 71, on right: 9
$@14 (84)
    on left: 70, on right: 71
class_line_vars (85)
    on left: 72 73, on right: 71 73
vars (86)
    on left: 74 75, on right: 69 75


State 0

    0 $accept: . program $end

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    6 class: _ACCESS_SPECIFIER . _CLASS _CLASSNAME @1 class_statements

    _CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: class_list .
    4 class_list: class_list . class

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    class  go to state 7


State 4

    3 class_list: class .

    $default  reduce using rule 3 (class_list)


State 5

    6 class: _ACCESS_SPECIFIER _CLASS . _CLASSNAME @1 class_statements

    _CLASSNAME  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 class_list: class_list class .

    $default  reduce using rule 4 (class_list)


State 8

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME . @1 class_statements

    $default  reduce using rule 5 (@1)

    @1  go to state 9


State 9

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 . class_statements

    _LBRACKET  shift, and go to state 10

    class_statements  go to state 11


State 10

    7 class_statements: _LBRACKET . class_variable_list constructor_list function_list _RBRACKET

    $default  reduce using rule 8 (class_variable_list)

    class_variable_list  go to state 12


State 11

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements .

    $default  reduce using rule 6 (class)


State 12

    7 class_statements: _LBRACKET class_variable_list . constructor_list function_list _RBRACKET
    9 class_variable_list: class_variable_list . class_variable

    _TYPE  shift, and go to state 13

    $default  reduce using rule 10 (constructor_list)

    constructor_list  go to state 14
    class_variable    go to state 15


State 13

   71 class_variable: _TYPE . $@14 class_line_vars _SEMICOLON

    $default  reduce using rule 70 ($@14)

    $@14  go to state 16


State 14

    7 class_statements: _LBRACKET class_variable_list constructor_list . function_list _RBRACKET
   11 constructor_list: constructor_list . constructor

    _CLASSNAME  shift, and go to state 17

    $default  reduce using rule 24 (function_list)

    constructor    go to state 18
    function_list  go to state 19


State 15

    9 class_variable_list: class_variable_list class_variable .

    $default  reduce using rule 9 (class_variable_list)


State 16

   71 class_variable: _TYPE $@14 . class_line_vars _SEMICOLON

    _ID  shift, and go to state 20

    class_line_vars  go to state 21


State 17

   14 constructor: _CLASSNAME . $@2 _LPAREN _constr_param_list $@3 _RPAREN _LBRACKET _constructor_body _RBRACKET

    $default  reduce using rule 12 ($@2)

    $@2  go to state 22


State 18

   11 constructor_list: constructor_list constructor .

    $default  reduce using rule 11 (constructor_list)


State 19

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list . _RBRACKET
   25 function_list: function_list . function

    _ACCESS_SPECIFIER  shift, and go to state 23
    _RBRACKET          shift, and go to state 24

    function  go to state 25


State 20

   72 class_line_vars: _ID .

    $default  reduce using rule 72 (class_line_vars)


State 21

   71 class_variable: _TYPE $@14 class_line_vars . _SEMICOLON
   73 class_line_vars: class_line_vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 22

   14 constructor: _CLASSNAME $@2 . _LPAREN _constr_param_list $@3 _RPAREN _LBRACKET _constructor_body _RBRACKET

    _LPAREN  shift, and go to state 28


State 23

   27 function: _ACCESS_SPECIFIER . static _TYPE _ID @5 _LPAREN parameter _RPAREN func_body

    _STATIC  shift, and go to state 29

    $default  reduce using rule 28 (static)

    static  go to state 30


State 24

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET .

    $default  reduce using rule 7 (class_statements)


State 25

   25 function_list: function_list function .

    $default  reduce using rule 25 (function_list)


State 26

   71 class_variable: _TYPE $@14 class_line_vars _SEMICOLON .

    $default  reduce using rule 71 (class_variable)


State 27

   73 class_line_vars: class_line_vars _COMMA . _ID

    _ID  shift, and go to state 31


State 28

   14 constructor: _CLASSNAME $@2 _LPAREN . _constr_param_list $@3 _RPAREN _LBRACKET _constructor_body _RBRACKET

    _TYPE  shift, and go to state 32

    $default  reduce using rule 15 (_constr_param_list)

    _constr_param_list   go to state 33
    _constr_with_params  go to state 34
    _constr_param        go to state 35


State 29

   29 static: _STATIC .

    $default  reduce using rule 29 (static)


State 30

   27 function: _ACCESS_SPECIFIER static . _TYPE _ID @5 _LPAREN parameter _RPAREN func_body

    _TYPE  shift, and go to state 36


State 31

   73 class_line_vars: class_line_vars _COMMA _ID .

    $default  reduce using rule 73 (class_line_vars)


State 32

   19 _constr_param: _TYPE . _ID

    _ID  shift, and go to state 37


State 33

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list . $@3 _RPAREN _LBRACKET _constructor_body _RBRACKET

    $default  reduce using rule 13 ($@3)

    $@3  go to state 38


State 34

   16 _constr_param_list: _constr_with_params .
   18 _constr_with_params: _constr_with_params . _COMMA _constr_param

    _COMMA  shift, and go to state 39

    $default  reduce using rule 16 (_constr_param_list)


State 35

   17 _constr_with_params: _constr_param .

    $default  reduce using rule 17 (_constr_with_params)


State 36

   27 function: _ACCESS_SPECIFIER static _TYPE . _ID @5 _LPAREN parameter _RPAREN func_body

    _ID  shift, and go to state 40


State 37

   19 _constr_param: _TYPE _ID .

    $default  reduce using rule 19 (_constr_param)


State 38

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list $@3 . _RPAREN _LBRACKET _constructor_body _RBRACKET

    _RPAREN  shift, and go to state 41


State 39

   18 _constr_with_params: _constr_with_params _COMMA . _constr_param

    _TYPE  shift, and go to state 32

    _constr_param  go to state 42


State 40

   27 function: _ACCESS_SPECIFIER static _TYPE _ID . @5 _LPAREN parameter _RPAREN func_body

    $default  reduce using rule 26 (@5)

    @5  go to state 43


State 41

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list $@3 _RPAREN . _LBRACKET _constructor_body _RBRACKET

    _LBRACKET  shift, and go to state 44


State 42

   18 _constr_with_params: _constr_with_params _COMMA _constr_param .

    $default  reduce using rule 18 (_constr_with_params)


State 43

   27 function: _ACCESS_SPECIFIER static _TYPE _ID @5 . _LPAREN parameter _RPAREN func_body

    _LPAREN  shift, and go to state 45


State 44

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list $@3 _RPAREN _LBRACKET . _constructor_body _RBRACKET

    $default  reduce using rule 20 (_constructor_body)

    _constructor_body  go to state 46


State 45

   27 function: _ACCESS_SPECIFIER static _TYPE _ID @5 _LPAREN . parameter _RPAREN func_body

    _TYPE  shift, and go to state 47

    $default  reduce using rule 30 (parameter)

    parameter  go to state 48


State 46

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list $@3 _RPAREN _LBRACKET _constructor_body . _RBRACKET
   21 _constructor_body: _constructor_body . _constructor_row

    _RBRACKET  shift, and go to state 49
    _THIS      shift, and go to state 50

    _constructor_row  go to state 51


State 47

   31 parameter: _TYPE . _ID

    _ID  shift, and go to state 52


State 48

   27 function: _ACCESS_SPECIFIER static _TYPE _ID @5 _LPAREN parameter . _RPAREN func_body

    _RPAREN  shift, and go to state 53


State 49

   14 constructor: _CLASSNAME $@2 _LPAREN _constr_param_list $@3 _RPAREN _LBRACKET _constructor_body _RBRACKET .

    $default  reduce using rule 14 (constructor)


State 50

   23 _constructor_row: _THIS . _DOT _ID _ASSIGN _ID $@4 _SEMICOLON

    _DOT  shift, and go to state 54


State 51

   21 _constructor_body: _constructor_body _constructor_row .

    $default  reduce using rule 21 (_constructor_body)


State 52

   31 parameter: _TYPE _ID .

    $default  reduce using rule 31 (parameter)


State 53

   27 function: _ACCESS_SPECIFIER static _TYPE _ID @5 _LPAREN parameter _RPAREN . func_body

    _LBRACKET  shift, and go to state 55

    func_body  go to state 56


State 54

   23 _constructor_row: _THIS _DOT . _ID _ASSIGN _ID $@4 _SEMICOLON

    _ID  shift, and go to state 57


State 55

   32 func_body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 66 (variable_list)

    variable_list  go to state 58


State 56

   27 function: _ACCESS_SPECIFIER static _TYPE _ID @5 _LPAREN parameter _RPAREN func_body .

    $default  reduce using rule 27 (function)


State 57

   23 _constructor_row: _THIS _DOT _ID . _ASSIGN _ID $@4 _SEMICOLON

    _ASSIGN  shift, and go to state 59


State 58

   32 func_body: _LBRACKET variable_list . statement_list _RBRACKET
   67 variable_list: variable_list . variable

    _TYPE  shift, and go to state 60

    $default  reduce using rule 33 (statement_list)

    statement_list  go to state 61
    variable        go to state 62


State 59

   23 _constructor_row: _THIS _DOT _ID _ASSIGN . _ID $@4 _SEMICOLON

    _ID  shift, and go to state 63


State 60

   69 variable: _TYPE . $@13 vars _SEMICOLON

    $default  reduce using rule 68 ($@13)

    $@13  go to state 64


State 61

   32 func_body: _LBRACKET variable_list statement_list . _RBRACKET
   34 statement_list: statement_list . statement

    _ID         shift, and go to state 65
    _CLASSNAME  shift, and go to state 66
    _RBRACKET   shift, and go to state 67
    _FOR        shift, and go to state 68

    statement              go to state 69
    make_object_statement  go to state 70
    inc_statement          go to state 71
    assignment_statement   go to state 72
    for_statement          go to state 73


State 62

   67 variable_list: variable_list variable .

    $default  reduce using rule 67 (variable_list)


State 63

   23 _constructor_row: _THIS _DOT _ID _ASSIGN _ID . $@4 _SEMICOLON

    $default  reduce using rule 22 ($@4)

    $@4  go to state 74


State 64

   69 variable: _TYPE $@13 . vars _SEMICOLON

    _ID  shift, and go to state 75

    vars  go to state 76


State 65

   48 inc_statement: _ID . $@9 _INC _SEMICOLON
   49 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 77

    $default  reduce using rule 47 ($@9)

    $@9  go to state 78


State 66

   42 make_object_statement: _CLASSNAME . @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 39 (@6)

    @6  go to state 79


State 67

   32 func_body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 32 (func_body)


State 68

   52 for_statement: _FOR . _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _LPAREN  shift, and go to state 80


State 69

   34 statement_list: statement_list statement .

    $default  reduce using rule 34 (statement_list)


State 70

   36 statement: make_object_statement .

    $default  reduce using rule 36 (statement)


State 71

   37 statement: inc_statement .

    $default  reduce using rule 37 (statement)


State 72

   38 statement: assignment_statement .

    $default  reduce using rule 38 (statement)


State 73

   35 statement: for_statement .

    $default  reduce using rule 35 (statement)


State 74

   23 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@4 . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 75

   74 vars: _ID .

    $default  reduce using rule 74 (vars)


State 76

   69 variable: _TYPE $@13 vars . _SEMICOLON
   75 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 82
    _COMMA      shift, and go to state 83


State 77

   49 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 84
    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86
    _LPAREN       shift, and go to state 87

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 91


State 78

   48 inc_statement: _ID $@9 . _INC _SEMICOLON

    _INC  shift, and go to state 92


State 79

   42 make_object_statement: _CLASSNAME @6 . _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

    _ID  shift, and go to state 93


State 80

   52 for_statement: _FOR _LPAREN . _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _TYPE  shift, and go to state 94


State 81

   23 _constructor_row: _THIS _DOT _ID _ASSIGN _ID $@4 _SEMICOLON .

    $default  reduce using rule 23 (_constructor_row)


State 82

   69 variable: _TYPE $@13 vars _SEMICOLON .

    $default  reduce using rule 69 (variable)


State 83

   75 vars: vars _COMMA . _ID

    _ID  shift, and go to state 95


State 84

   55 exp: _ID .
   61 function_call: _ID . $@12 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 60 ($@12)
    $default  reduce using rule 55 (exp)

    $@12  go to state 96


State 85

   58 literal: _INT_NUMBER .

    $default  reduce using rule 58 (literal)


State 86

   59 literal: _UINT_NUMBER .

    $default  reduce using rule 59 (literal)


State 87

   57 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 84
    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86
    _LPAREN       shift, and go to state 87

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 97


State 88

   64 num_exp: exp .

    $default  reduce using rule 64 (num_exp)


State 89

   54 exp: literal .

    $default  reduce using rule 54 (exp)


State 90

   56 exp: function_call .

    $default  reduce using rule 56 (exp)


State 91

   49 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   65 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 98
    _AROP       shift, and go to state 99


State 92

   48 inc_statement: _ID $@9 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 100


State 93

   42 make_object_statement: _CLASSNAME @6 _ID . $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 40 ($@7)

    $@7  go to state 101


State 94

   52 for_statement: _FOR _LPAREN _TYPE . _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ID  shift, and go to state 102


State 95

   75 vars: vars _COMMA _ID .

    $default  reduce using rule 75 (vars)


State 96

   61 function_call: _ID $@12 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 103


State 97

   57 exp: _LPAREN num_exp . _RPAREN
   65 num_exp: num_exp . _AROP exp

    _RPAREN  shift, and go to state 104
    _AROP    shift, and go to state 99


State 98

   49 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 49 (assignment_statement)


State 99

   65 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 84
    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86
    _LPAREN       shift, and go to state 87

    exp            go to state 105
    literal        go to state 89
    function_call  go to state 90


State 100

   48 inc_statement: _ID $@9 _INC _SEMICOLON .

    $default  reduce using rule 48 (inc_statement)


State 101

   42 make_object_statement: _CLASSNAME @6 _ID $@7 . _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

    _ASSIGN  shift, and go to state 106


State 102

   52 for_statement: _FOR _LPAREN _TYPE _ID . $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    $default  reduce using rule 50 ($@10)

    $@10  go to state 107


State 103

   61 function_call: _ID $@12 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 84
    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86
    _LPAREN       shift, and go to state 87

    $default  reduce using rule 62 (argument)

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    argument       go to state 108
    num_exp        go to state 109


State 104

   57 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 57 (exp)


State 105

   65 num_exp: num_exp _AROP exp .

    $default  reduce using rule 65 (num_exp)


State 106

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN . _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

    _NEW  shift, and go to state 110


State 107

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 . _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ASSIGN  shift, and go to state 111


State 108

   61 function_call: _ID $@12 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 112


State 109

   63 argument: num_exp .
   65 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 99

    $default  reduce using rule 63 (argument)


State 110

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW . _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON

    _CLASSNAME  shift, and go to state 113


State 111

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN . literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86

    literal  go to state 114


State 112

   61 function_call: _ID $@12 _LPAREN argument _RPAREN .

    $default  reduce using rule 61 (function_call)


State 113

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME . $@8 _LPAREN ids _RPAREN _SEMICOLON

    $default  reduce using rule 41 ($@8)

    $@8  go to state 115


State 114

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal . _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 116


State 115

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 . _LPAREN ids _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 117


State 116

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON . rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ID           shift, and go to state 84
    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86
    _LPAREN       shift, and go to state 87

    rel_exp        go to state 118
    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 119


State 117

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN . ids _RPAREN _SEMICOLON

    _ID  shift, and go to state 120

    $default  reduce using rule 43 (ids)

    ids      go to state 121
    id_list  go to state 122


State 118

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp . _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 123


State 119

   53 rel_exp: num_exp . _RELOP num_exp
   65 num_exp: num_exp . _AROP exp

    _AROP   shift, and go to state 99
    _RELOP  shift, and go to state 124


State 120

   45 id_list: _ID .

    $default  reduce using rule 45 (id_list)


State 121

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 125


State 122

   44 ids: id_list .
   46 id_list: id_list . _COMMA _ID

    _COMMA  shift, and go to state 126

    $default  reduce using rule 44 (ids)


State 123

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON . _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _ID  shift, and go to state 127


State 124

   53 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 84
    _INT_NUMBER   shift, and go to state 85
    _UINT_NUMBER  shift, and go to state 86
    _LPAREN       shift, and go to state 87

    exp            go to state 88
    literal        go to state 89
    function_call  go to state 90
    num_exp        go to state 128


State 125

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 129


State 126

   46 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 130


State 127

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID . _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _INC  shift, and go to state 131


State 128

   53 rel_exp: num_exp _RELOP num_exp .
   65 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 99

    $default  reduce using rule 53 (rel_exp)


State 129

   42 make_object_statement: _CLASSNAME @6 _ID $@7 _ASSIGN _NEW _CLASSNAME $@8 _LPAREN ids _RPAREN _SEMICOLON .

    $default  reduce using rule 42 (make_object_statement)


State 130

   46 id_list: id_list _COMMA _ID .

    $default  reduce using rule 46 (id_list)


State 131

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC . _RPAREN _LBRACKET @11 statement_list _RBRACKET

    _RPAREN  shift, and go to state 132


State 132

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN . _LBRACKET @11 statement_list _RBRACKET

    _LBRACKET  shift, and go to state 133


State 133

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET . @11 statement_list _RBRACKET

    $default  reduce using rule 51 (@11)

    @11  go to state 134


State 134

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 . statement_list _RBRACKET

    $default  reduce using rule 33 (statement_list)

    statement_list  go to state 135


State 135

   34 statement_list: statement_list . statement
   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list . _RBRACKET

    _ID         shift, and go to state 65
    _CLASSNAME  shift, and go to state 66
    _RBRACKET   shift, and go to state 136
    _FOR        shift, and go to state 68

    statement              go to state 69
    make_object_statement  go to state 70
    inc_statement          go to state 71
    assignment_statement   go to state 72
    for_statement          go to state 73


State 136

   52 for_statement: _FOR _LPAREN _TYPE _ID $@10 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @11 statement_list _RBRACKET .

    $default  reduce using rule 52 (for_statement)
