Terminals unused in grammar

   _IF
   _ELSE
   _RETURN
   _WHILE
   _DO
   _PRIVATE
   _PROTECTED
   _PUBLIC
   _CONTIUNE
   _BREAK
   _NEW
   ONLY_IF


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class_list

    3 class_list: class
    4           | class_list class

    5 @1: %empty

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET

    8 class_variable_list: %empty
    9                    | class_variable_list class_variable

   10 constructor_list: constructor

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME _LPAREN _RPAREN _LBRACKET _constructor_body _RBRACKET

   12 _constructor_body: %empty
   13                  | _constructor_body _constructor_row

   14 _constructor_row: _THIS _DOT _ID _ASSIGN _ID _SEMICOLON

   15 function_list: %empty
   16              | function_list function

   17 $@2: %empty

   18 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body

   19 static: %empty
   20       | _STATIC

   21 parameter: %empty
   22          | _TYPE _ID

   23 func_body: _LBRACKET variable_list statement_list _RBRACKET

   24 statement_list: %empty
   25               | statement_list statement

   26 statement: for_statement
   27          | inc_statement
   28          | assignment_statement

   29 $@3: %empty

   30 inc_statement: _ID $@3 _INC _SEMICOLON

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 $@4: %empty

   33 @5: %empty

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

   35 rel_exp: num_exp _RELOP num_exp

   36 exp: literal
   37    | _ID
   38    | function_call
   39    | _LPAREN num_exp _RPAREN

   40 literal: _INT_NUMBER
   41        | _UINT_NUMBER

   42 $@6: %empty

   43 function_call: _ID $@6 _LPAREN argument _RPAREN

   44 argument: %empty
   45         | num_exp

   46 num_exp: exp
   47        | num_exp _AROP exp

   48 variable_list: %empty
   49              | variable_list variable

   50 $@7: %empty

   51 variable: _TYPE $@7 vars _SEMICOLON

   52 $@8: %empty

   53 class_variable: _TYPE $@8 class_line_vars _SEMICOLON

   54 class_line_vars: _ID
   55                | class_line_vars _COMMA _ID

   56 vars: _ID
   57     | vars _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 18 22 34 51 53
_ACCESS_SPECIFIER (259) 6 11 18
_IF (260)
_ELSE (261)
_RETURN (262)
_ID (263) 14 18 22 30 31 34 37 43 54 55 56 57
_INT_NUMBER (264) 40
_UINT_NUMBER (265) 41
_CLASSNAME (266) 6 11
_LPAREN (267) 11 18 34 39 43
_RPAREN (268) 11 18 34 39 43
_LBRACKET (269) 7 11 23 34
_RBRACKET (270) 7 11 23 34
_ASSIGN (271) 14 31 34
_SEMICOLON (272) 14 30 31 34 51 53
_AROP (273) 47
_RELOP (274) 35
_COMMA (275) 55 57
_INC (276) 30 34
_WHILE (277)
_DO (278)
_PRIVATE (279)
_PROTECTED (280)
_PUBLIC (281)
_THIS (282) 14
_FOR (283) 34
_CONTIUNE (284)
_BREAK (285)
_NEW (286)
_CLASS (287) 6
_STATIC (288) 20
_DOT (289) 14
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1 2, on right: 0
class_list (38)
    on left: 3 4, on right: 2 4
class (39)
    on left: 6, on right: 3 4
@1 (40)
    on left: 5, on right: 6
class_statements (41)
    on left: 7, on right: 6
class_variable_list (42)
    on left: 8 9, on right: 7 9
constructor_list (43)
    on left: 10, on right: 7
constructor (44)
    on left: 11, on right: 10
_constructor_body (45)
    on left: 12 13, on right: 11 13
_constructor_row (46)
    on left: 14, on right: 13
function_list (47)
    on left: 15 16, on right: 7 16
function (48)
    on left: 18, on right: 16
$@2 (49)
    on left: 17, on right: 18
static (50)
    on left: 19 20, on right: 18
parameter (51)
    on left: 21 22, on right: 18
func_body (52)
    on left: 23, on right: 18
statement_list (53)
    on left: 24 25, on right: 23 25 34
statement (54)
    on left: 26 27 28, on right: 25
inc_statement (55)
    on left: 30, on right: 27
$@3 (56)
    on left: 29, on right: 30
assignment_statement (57)
    on left: 31, on right: 28
for_statement (58)
    on left: 34, on right: 26
$@4 (59)
    on left: 32, on right: 34
@5 (60)
    on left: 33, on right: 34
rel_exp (61)
    on left: 35, on right: 34
exp (62)
    on left: 36 37 38 39, on right: 46 47
literal (63)
    on left: 40 41, on right: 34 36
function_call (64)
    on left: 43, on right: 38
$@6 (65)
    on left: 42, on right: 43
argument (66)
    on left: 44 45, on right: 43
num_exp (67)
    on left: 46 47, on right: 31 35 39 45 47
variable_list (68)
    on left: 48 49, on right: 23 49
variable (69)
    on left: 51, on right: 49
$@7 (70)
    on left: 50, on right: 51
class_variable (71)
    on left: 53, on right: 9
$@8 (72)
    on left: 52, on right: 53
class_line_vars (73)
    on left: 54 55, on right: 53 55
vars (74)
    on left: 56 57, on right: 51 57


State 0

    0 $accept: . program $end

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    6 class: _ACCESS_SPECIFIER . _CLASS _CLASSNAME @1 class_statements

    _CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: class_list .
    4 class_list: class_list . class

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    class  go to state 7


State 4

    3 class_list: class .

    $default  reduce using rule 3 (class_list)


State 5

    6 class: _ACCESS_SPECIFIER _CLASS . _CLASSNAME @1 class_statements

    _CLASSNAME  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 class_list: class_list class .

    $default  reduce using rule 4 (class_list)


State 8

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME . @1 class_statements

    $default  reduce using rule 5 (@1)

    @1  go to state 9


State 9

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 . class_statements

    _LBRACKET  shift, and go to state 10

    class_statements  go to state 11


State 10

    7 class_statements: _LBRACKET . class_variable_list constructor_list function_list _RBRACKET

    $default  reduce using rule 8 (class_variable_list)

    class_variable_list  go to state 12


State 11

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements .

    $default  reduce using rule 6 (class)


State 12

    7 class_statements: _LBRACKET class_variable_list . constructor_list function_list _RBRACKET
    9 class_variable_list: class_variable_list . class_variable

    _TYPE              shift, and go to state 13
    _ACCESS_SPECIFIER  shift, and go to state 14

    constructor_list  go to state 15
    constructor       go to state 16
    class_variable    go to state 17


State 13

   53 class_variable: _TYPE . $@8 class_line_vars _SEMICOLON

    $default  reduce using rule 52 ($@8)

    $@8  go to state 18


State 14

   11 constructor: _ACCESS_SPECIFIER . _CLASSNAME _LPAREN _RPAREN _LBRACKET _constructor_body _RBRACKET

    _CLASSNAME  shift, and go to state 19


State 15

    7 class_statements: _LBRACKET class_variable_list constructor_list . function_list _RBRACKET

    $default  reduce using rule 15 (function_list)

    function_list  go to state 20


State 16

   10 constructor_list: constructor .

    $default  reduce using rule 10 (constructor_list)


State 17

    9 class_variable_list: class_variable_list class_variable .

    $default  reduce using rule 9 (class_variable_list)


State 18

   53 class_variable: _TYPE $@8 . class_line_vars _SEMICOLON

    _ID  shift, and go to state 21

    class_line_vars  go to state 22


State 19

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME . _LPAREN _RPAREN _LBRACKET _constructor_body _RBRACKET

    _LPAREN  shift, and go to state 23


State 20

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list . _RBRACKET
   16 function_list: function_list . function

    _ACCESS_SPECIFIER  shift, and go to state 24
    _RBRACKET          shift, and go to state 25

    function  go to state 26


State 21

   54 class_line_vars: _ID .

    $default  reduce using rule 54 (class_line_vars)


State 22

   53 class_variable: _TYPE $@8 class_line_vars . _SEMICOLON
   55 class_line_vars: class_line_vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 27
    _COMMA      shift, and go to state 28


State 23

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME _LPAREN . _RPAREN _LBRACKET _constructor_body _RBRACKET

    _RPAREN  shift, and go to state 29


State 24

   18 function: _ACCESS_SPECIFIER . static _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body

    _STATIC  shift, and go to state 30

    $default  reduce using rule 19 (static)

    static  go to state 31


State 25

    7 class_statements: _LBRACKET class_variable_list constructor_list function_list _RBRACKET .

    $default  reduce using rule 7 (class_statements)


State 26

   16 function_list: function_list function .

    $default  reduce using rule 16 (function_list)


State 27

   53 class_variable: _TYPE $@8 class_line_vars _SEMICOLON .

    $default  reduce using rule 53 (class_variable)


State 28

   55 class_line_vars: class_line_vars _COMMA . _ID

    _ID  shift, and go to state 32


State 29

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME _LPAREN _RPAREN . _LBRACKET _constructor_body _RBRACKET

    _LBRACKET  shift, and go to state 33


State 30

   20 static: _STATIC .

    $default  reduce using rule 20 (static)


State 31

   18 function: _ACCESS_SPECIFIER static . _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body

    _TYPE  shift, and go to state 34


State 32

   55 class_line_vars: class_line_vars _COMMA _ID .

    $default  reduce using rule 55 (class_line_vars)


State 33

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME _LPAREN _RPAREN _LBRACKET . _constructor_body _RBRACKET

    $default  reduce using rule 12 (_constructor_body)

    _constructor_body  go to state 35


State 34

   18 function: _ACCESS_SPECIFIER static _TYPE . _ID $@2 _LPAREN parameter _RPAREN func_body

    _ID  shift, and go to state 36


State 35

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME _LPAREN _RPAREN _LBRACKET _constructor_body . _RBRACKET
   13 _constructor_body: _constructor_body . _constructor_row

    _RBRACKET  shift, and go to state 37
    _THIS      shift, and go to state 38

    _constructor_row  go to state 39


State 36

   18 function: _ACCESS_SPECIFIER static _TYPE _ID . $@2 _LPAREN parameter _RPAREN func_body

    $default  reduce using rule 17 ($@2)

    $@2  go to state 40


State 37

   11 constructor: _ACCESS_SPECIFIER _CLASSNAME _LPAREN _RPAREN _LBRACKET _constructor_body _RBRACKET .

    $default  reduce using rule 11 (constructor)


State 38

   14 _constructor_row: _THIS . _DOT _ID _ASSIGN _ID _SEMICOLON

    _DOT  shift, and go to state 41


State 39

   13 _constructor_body: _constructor_body _constructor_row .

    $default  reduce using rule 13 (_constructor_body)


State 40

   18 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 . _LPAREN parameter _RPAREN func_body

    _LPAREN  shift, and go to state 42


State 41

   14 _constructor_row: _THIS _DOT . _ID _ASSIGN _ID _SEMICOLON

    _ID  shift, and go to state 43


State 42

   18 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN . parameter _RPAREN func_body

    _TYPE  shift, and go to state 44

    $default  reduce using rule 21 (parameter)

    parameter  go to state 45


State 43

   14 _constructor_row: _THIS _DOT _ID . _ASSIGN _ID _SEMICOLON

    _ASSIGN  shift, and go to state 46


State 44

   22 parameter: _TYPE . _ID

    _ID  shift, and go to state 47


State 45

   18 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter . _RPAREN func_body

    _RPAREN  shift, and go to state 48


State 46

   14 _constructor_row: _THIS _DOT _ID _ASSIGN . _ID _SEMICOLON

    _ID  shift, and go to state 49


State 47

   22 parameter: _TYPE _ID .

    $default  reduce using rule 22 (parameter)


State 48

   18 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter _RPAREN . func_body

    _LBRACKET  shift, and go to state 50

    func_body  go to state 51


State 49

   14 _constructor_row: _THIS _DOT _ID _ASSIGN _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 52


State 50

   23 func_body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 48 (variable_list)

    variable_list  go to state 53


State 51

   18 function: _ACCESS_SPECIFIER static _TYPE _ID $@2 _LPAREN parameter _RPAREN func_body .

    $default  reduce using rule 18 (function)


State 52

   14 _constructor_row: _THIS _DOT _ID _ASSIGN _ID _SEMICOLON .

    $default  reduce using rule 14 (_constructor_row)


State 53

   23 func_body: _LBRACKET variable_list . statement_list _RBRACKET
   49 variable_list: variable_list . variable

    _TYPE  shift, and go to state 54

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 55
    variable        go to state 56


State 54

   51 variable: _TYPE . $@7 vars _SEMICOLON

    $default  reduce using rule 50 ($@7)

    $@7  go to state 57


State 55

   23 func_body: _LBRACKET variable_list statement_list . _RBRACKET
   25 statement_list: statement_list . statement

    _ID        shift, and go to state 58
    _RBRACKET  shift, and go to state 59
    _FOR       shift, and go to state 60

    statement             go to state 61
    inc_statement         go to state 62
    assignment_statement  go to state 63
    for_statement         go to state 64


State 56

   49 variable_list: variable_list variable .

    $default  reduce using rule 49 (variable_list)


State 57

   51 variable: _TYPE $@7 . vars _SEMICOLON

    _ID  shift, and go to state 65

    vars  go to state 66


State 58

   30 inc_statement: _ID . $@3 _INC _SEMICOLON
   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 67

    $default  reduce using rule 29 ($@3)

    $@3  go to state 68


State 59

   23 func_body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 23 (func_body)


State 60

   34 for_statement: _FOR . _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _LPAREN  shift, and go to state 69


State 61

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 62

   27 statement: inc_statement .

    $default  reduce using rule 27 (statement)


State 63

   28 statement: assignment_statement .

    $default  reduce using rule 28 (statement)


State 64

   26 statement: for_statement .

    $default  reduce using rule 26 (statement)


State 65

   56 vars: _ID .

    $default  reduce using rule 56 (vars)


State 66

   51 variable: _TYPE $@7 vars . _SEMICOLON
   57 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 70
    _COMMA      shift, and go to state 71


State 67

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74
    _LPAREN       shift, and go to state 75

    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    num_exp        go to state 79


State 68

   30 inc_statement: _ID $@3 . _INC _SEMICOLON

    _INC  shift, and go to state 80


State 69

   34 for_statement: _FOR _LPAREN . _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _TYPE  shift, and go to state 81


State 70

   51 variable: _TYPE $@7 vars _SEMICOLON .

    $default  reduce using rule 51 (variable)


State 71

   57 vars: vars _COMMA . _ID

    _ID  shift, and go to state 82


State 72

   37 exp: _ID .
   43 function_call: _ID . $@6 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 42 ($@6)
    $default  reduce using rule 37 (exp)

    $@6  go to state 83


State 73

   40 literal: _INT_NUMBER .

    $default  reduce using rule 40 (literal)


State 74

   41 literal: _UINT_NUMBER .

    $default  reduce using rule 41 (literal)


State 75

   39 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74
    _LPAREN       shift, and go to state 75

    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    num_exp        go to state 84


State 76

   46 num_exp: exp .

    $default  reduce using rule 46 (num_exp)


State 77

   36 exp: literal .

    $default  reduce using rule 36 (exp)


State 78

   38 exp: function_call .

    $default  reduce using rule 38 (exp)


State 79

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   47 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 85
    _AROP       shift, and go to state 86


State 80

   30 inc_statement: _ID $@3 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 87


State 81

   34 for_statement: _FOR _LPAREN _TYPE . _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ID  shift, and go to state 88


State 82

   57 vars: vars _COMMA _ID .

    $default  reduce using rule 57 (vars)


State 83

   43 function_call: _ID $@6 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 89


State 84

   39 exp: _LPAREN num_exp . _RPAREN
   47 num_exp: num_exp . _AROP exp

    _RPAREN  shift, and go to state 90
    _AROP    shift, and go to state 86


State 85

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 86

   47 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74
    _LPAREN       shift, and go to state 75

    exp            go to state 91
    literal        go to state 77
    function_call  go to state 78


State 87

   30 inc_statement: _ID $@3 _INC _SEMICOLON .

    $default  reduce using rule 30 (inc_statement)


State 88

   34 for_statement: _FOR _LPAREN _TYPE _ID . $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    $default  reduce using rule 32 ($@4)

    $@4  go to state 92


State 89

   43 function_call: _ID $@6 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74
    _LPAREN       shift, and go to state 75

    $default  reduce using rule 44 (argument)

    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    argument       go to state 93
    num_exp        go to state 94


State 90

   39 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 39 (exp)


State 91

   47 num_exp: num_exp _AROP exp .

    $default  reduce using rule 47 (num_exp)


State 92

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 . _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ASSIGN  shift, and go to state 95


State 93

   43 function_call: _ID $@6 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 96


State 94

   45 argument: num_exp .
   47 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 86

    $default  reduce using rule 45 (argument)


State 95

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN . literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74

    literal  go to state 97


State 96

   43 function_call: _ID $@6 _LPAREN argument _RPAREN .

    $default  reduce using rule 43 (function_call)


State 97

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal . _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 98


State 98

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON . rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74
    _LPAREN       shift, and go to state 75

    rel_exp        go to state 99
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    num_exp        go to state 100


State 99

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp . _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 101


State 100

   35 rel_exp: num_exp . _RELOP num_exp
   47 num_exp: num_exp . _AROP exp

    _AROP   shift, and go to state 86
    _RELOP  shift, and go to state 102


State 101

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON . _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _ID  shift, and go to state 103


State 102

   35 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 72
    _INT_NUMBER   shift, and go to state 73
    _UINT_NUMBER  shift, and go to state 74
    _LPAREN       shift, and go to state 75

    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    num_exp        go to state 104


State 103

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID . _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _INC  shift, and go to state 105


State 104

   35 rel_exp: num_exp _RELOP num_exp .
   47 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 86

    $default  reduce using rule 35 (rel_exp)


State 105

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC . _RPAREN _LBRACKET @5 statement_list _RBRACKET

    _RPAREN  shift, and go to state 106


State 106

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN . _LBRACKET @5 statement_list _RBRACKET

    _LBRACKET  shift, and go to state 107


State 107

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET . @5 statement_list _RBRACKET

    $default  reduce using rule 33 (@5)

    @5  go to state 108


State 108

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 109


State 109

   25 statement_list: statement_list . statement
   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list . _RBRACKET

    _ID        shift, and go to state 58
    _RBRACKET  shift, and go to state 110
    _FOR       shift, and go to state 60

    statement             go to state 61
    inc_statement         go to state 62
    assignment_statement  go to state 63
    for_statement         go to state 64


State 110

   34 for_statement: _FOR _LPAREN _TYPE _ID $@4 _ASSIGN literal _SEMICOLON rel_exp _SEMICOLON _ID _INC _RPAREN _LBRACKET @5 statement_list _RBRACKET .

    $default  reduce using rule 34 (for_statement)
