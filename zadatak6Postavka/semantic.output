Terminals unused in grammar

   _WHILE
   _DO
   _PRIVATE
   _PROTECTED
   _PUBLIC
   _THIS
   _FOR
   _CONTIUNE
   _BREAK
   _NEW
   _STATIC


Rules useless in parser due to conflicts

   21 $@4: %empty


State 13 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class_list

    3 class_list: class
    4           | class_list class

    5 @1: %empty

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements

    7 class_statements: _LBRACKET class_variable_list function_list _RBRACKET

    8 class_variable_list: %empty
    9                    | class_variable_list class_variable

   10 function_list: function
   11              | function_list function

   12 $@2: %empty

   13 function: _TYPE _ID $@2 _LPAREN parameter _RPAREN body

   14 parameter: %empty
   15          | _TYPE _ID

   16 body: _LBRACKET variable_list statement_list _RBRACKET

   17 variable_list: %empty
   18              | variable_list variable

   19 $@3: %empty

   20 variable: _TYPE $@3 vars _SEMICOLON

   21 $@4: %empty

   22 class_variable: _TYPE $@4 class_line_vars _SEMICOLON

   23 class_line_vars: _ID
   24                | class_line_vars _COMMA _ID

   25 vars: _ID
   26     | vars _COMMA _ID

   27 statement_list: %empty
   28               | statement_list statement

   29 statement: compound_statement
   30          | assignment_statement
   31          | if_statement
   32          | return_statement
   33          | inc_statement
   34          | branch_statement

   35 $@5: %empty

   36 $@6: %empty

   37 branch_statement: _BRANCH _LPAREN _ID $@5 _SEMICOLON literals $@6 _RPAREN startends

   38 startends: startend
   39          | startends startend

   40 startend: _DO_START statement _DO_END

   41 literals: literal
   42         | literals _COMMA literal

   43 $@7: %empty

   44 inc_statement: _ID $@7 _INC _SEMICOLON

   45 @8: %empty

   46 compound_statement: _LBRACKET @8 statement_list _RBRACKET

   47 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   48 num_exp: exp
   49        | num_exp _AROP exp

   50 exp: literal
   51    | _ID
   52    | function_call
   53    | _LPAREN num_exp _RPAREN

   54 literal: _INT_NUMBER
   55        | _UINT_NUMBER

   56 $@9: %empty

   57 function_call: _ID $@9 _LPAREN argument _RPAREN

   58 argument: %empty
   59         | num_exp

   60 if_statement: if_part
   61             | if_part _ELSE statement

   62 if_part: _IF _LPAREN rel_exp _RPAREN statement

   63 rel_exp: num_exp _RELOP num_exp

   64 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 13 15 20 22
_ACCESS_SPECIFIER (259) 6
_IF (260) 62
_ELSE (261) 61
_RETURN (262) 64
_ID (263) 13 15 23 24 25 26 37 44 47 51 57
_INT_NUMBER (264) 54
_UINT_NUMBER (265) 55
_CLASSNAME (266) 6
_LPAREN (267) 13 37 53 57 62
_RPAREN (268) 13 37 53 57 62
_LBRACKET (269) 7 16 46
_RBRACKET (270) 7 16 46
_ASSIGN (271) 47
_SEMICOLON (272) 20 22 37 44 47 64
_AROP (273) 49
_RELOP (274) 63
_INC (275) 44
_BRANCH (276) 37
_COMMA (277) 24 26 42
_DO_START (278) 40
_DO_END (279) 40
_WHILE (280)
_DO (281)
_PRIVATE (282)
_PROTECTED (283)
_PUBLIC (284)
_THIS (285)
_FOR (286)
_CONTIUNE (287)
_BREAK (288)
_NEW (289)
_CLASS (290) 6
_STATIC (291)
ONLY_IF (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
class_list (40)
    on left: 3 4, on right: 2 4
class (41)
    on left: 6, on right: 3 4
@1 (42)
    on left: 5, on right: 6
class_statements (43)
    on left: 7, on right: 6
class_variable_list (44)
    on left: 8 9, on right: 7 9
function_list (45)
    on left: 10 11, on right: 7 11
function (46)
    on left: 13, on right: 10 11
$@2 (47)
    on left: 12, on right: 13
parameter (48)
    on left: 14 15, on right: 13
body (49)
    on left: 16, on right: 13
variable_list (50)
    on left: 17 18, on right: 16 18
variable (51)
    on left: 20, on right: 18
$@3 (52)
    on left: 19, on right: 20
class_variable (53)
    on left: 22, on right: 9
$@4 (54)
    on left: 21, on right: 22
class_line_vars (55)
    on left: 23 24, on right: 22 24
vars (56)
    on left: 25 26, on right: 20 26
statement_list (57)
    on left: 27 28, on right: 16 28 46
statement (58)
    on left: 29 30 31 32 33 34, on right: 28 40 61 62
branch_statement (59)
    on left: 37, on right: 34
$@5 (60)
    on left: 35, on right: 37
$@6 (61)
    on left: 36, on right: 37
startends (62)
    on left: 38 39, on right: 37 39
startend (63)
    on left: 40, on right: 38 39
literals (64)
    on left: 41 42, on right: 37 42
inc_statement (65)
    on left: 44, on right: 33
$@7 (66)
    on left: 43, on right: 44
compound_statement (67)
    on left: 46, on right: 29
@8 (68)
    on left: 45, on right: 46
assignment_statement (69)
    on left: 47, on right: 30
num_exp (70)
    on left: 48 49, on right: 47 49 53 59 63 64
exp (71)
    on left: 50 51 52 53, on right: 48 49
literal (72)
    on left: 54 55, on right: 41 42 50
function_call (73)
    on left: 57, on right: 52
$@9 (74)
    on left: 56, on right: 57
argument (75)
    on left: 58 59, on right: 57
if_statement (76)
    on left: 60 61, on right: 31
if_part (77)
    on left: 62, on right: 60 61
rel_exp (78)
    on left: 63, on right: 62
return_statement (79)
    on left: 64, on right: 32


State 0

    0 $accept: . program $end

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    6 class: _ACCESS_SPECIFIER . _CLASS _CLASSNAME @1 class_statements

    _CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: class_list .
    4 class_list: class_list . class

    _ACCESS_SPECIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    class  go to state 7


State 4

    3 class_list: class .

    $default  reduce using rule 3 (class_list)


State 5

    6 class: _ACCESS_SPECIFIER _CLASS . _CLASSNAME @1 class_statements

    _CLASSNAME  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 class_list: class_list class .

    $default  reduce using rule 4 (class_list)


State 8

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME . @1 class_statements

    $default  reduce using rule 5 (@1)

    @1  go to state 9


State 9

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 . class_statements

    _LBRACKET  shift, and go to state 10

    class_statements  go to state 11


State 10

    7 class_statements: _LBRACKET . class_variable_list function_list _RBRACKET

    $default  reduce using rule 8 (class_variable_list)

    class_variable_list  go to state 12


State 11

    6 class: _ACCESS_SPECIFIER _CLASS _CLASSNAME @1 class_statements .

    $default  reduce using rule 6 (class)


State 12

    7 class_statements: _LBRACKET class_variable_list . function_list _RBRACKET
    9 class_variable_list: class_variable_list . class_variable

    _TYPE  shift, and go to state 13

    function_list   go to state 14
    function        go to state 15
    class_variable  go to state 16


State 13

   13 function: _TYPE . _ID $@2 _LPAREN parameter _RPAREN body
   22 class_variable: _TYPE . $@4 class_line_vars _SEMICOLON

    _ID  shift, and go to state 17

    _ID  [reduce using rule 21 ($@4)]

    $@4  go to state 18


State 14

    7 class_statements: _LBRACKET class_variable_list function_list . _RBRACKET
   11 function_list: function_list . function

    _TYPE      shift, and go to state 19
    _RBRACKET  shift, and go to state 20

    function  go to state 21


State 15

   10 function_list: function .

    $default  reduce using rule 10 (function_list)


State 16

    9 class_variable_list: class_variable_list class_variable .

    $default  reduce using rule 9 (class_variable_list)


State 17

   13 function: _TYPE _ID . $@2 _LPAREN parameter _RPAREN body

    $default  reduce using rule 12 ($@2)

    $@2  go to state 22


State 18

   22 class_variable: _TYPE $@4 . class_line_vars _SEMICOLON

    _ID  shift, and go to state 23

    class_line_vars  go to state 24


State 19

   13 function: _TYPE . _ID $@2 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 17


State 20

    7 class_statements: _LBRACKET class_variable_list function_list _RBRACKET .

    $default  reduce using rule 7 (class_statements)


State 21

   11 function_list: function_list function .

    $default  reduce using rule 11 (function_list)


State 22

   13 function: _TYPE _ID $@2 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 25


State 23

   23 class_line_vars: _ID .

    $default  reduce using rule 23 (class_line_vars)


State 24

   22 class_variable: _TYPE $@4 class_line_vars . _SEMICOLON
   24 class_line_vars: class_line_vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 25

   13 function: _TYPE _ID $@2 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 28

    $default  reduce using rule 14 (parameter)

    parameter  go to state 29


State 26

   22 class_variable: _TYPE $@4 class_line_vars _SEMICOLON .

    $default  reduce using rule 22 (class_variable)


State 27

   24 class_line_vars: class_line_vars _COMMA . _ID

    _ID  shift, and go to state 30


State 28

   15 parameter: _TYPE . _ID

    _ID  shift, and go to state 31


State 29

   13 function: _TYPE _ID $@2 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 32


State 30

   24 class_line_vars: class_line_vars _COMMA _ID .

    $default  reduce using rule 24 (class_line_vars)


State 31

   15 parameter: _TYPE _ID .

    $default  reduce using rule 15 (parameter)


State 32

   13 function: _TYPE _ID $@2 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 33

    body  go to state 34


State 33

   16 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 17 (variable_list)

    variable_list  go to state 35


State 34

   13 function: _TYPE _ID $@2 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 13 (function)


State 35

   16 body: _LBRACKET variable_list . statement_list _RBRACKET
   18 variable_list: variable_list . variable

    _TYPE  shift, and go to state 36

    $default  reduce using rule 27 (statement_list)

    variable        go to state 37
    statement_list  go to state 38


State 36

   20 variable: _TYPE . $@3 vars _SEMICOLON

    $default  reduce using rule 19 ($@3)

    $@3  go to state 39


State 37

   18 variable_list: variable_list variable .

    $default  reduce using rule 18 (variable_list)


State 38

   16 body: _LBRACKET variable_list statement_list . _RBRACKET
   28 statement_list: statement_list . statement

    _IF        shift, and go to state 40
    _RETURN    shift, and go to state 41
    _ID        shift, and go to state 42
    _LBRACKET  shift, and go to state 43
    _RBRACKET  shift, and go to state 44
    _BRANCH    shift, and go to state 45

    statement             go to state 46
    branch_statement      go to state 47
    inc_statement         go to state 48
    compound_statement    go to state 49
    assignment_statement  go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 39

   20 variable: _TYPE $@3 . vars _SEMICOLON

    _ID  shift, and go to state 54

    vars  go to state 55


State 40

   62 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 56


State 41

   64 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 61
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 42

   44 inc_statement: _ID . $@7 _INC _SEMICOLON
   47 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 65

    $default  reduce using rule 43 ($@7)

    $@7  go to state 66


State 43

   46 compound_statement: _LBRACKET . @8 statement_list _RBRACKET

    $default  reduce using rule 45 (@8)

    @8  go to state 67


State 44

   16 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 16 (body)


State 45

   37 branch_statement: _BRANCH . _LPAREN _ID $@5 _SEMICOLON literals $@6 _RPAREN startends

    _LPAREN  shift, and go to state 68


State 46

   28 statement_list: statement_list statement .

    $default  reduce using rule 28 (statement_list)


State 47

   34 statement: branch_statement .

    $default  reduce using rule 34 (statement)


State 48

   33 statement: inc_statement .

    $default  reduce using rule 33 (statement)


State 49

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 50

   30 statement: assignment_statement .

    $default  reduce using rule 30 (statement)


State 51

   31 statement: if_statement .

    $default  reduce using rule 31 (statement)


State 52

   60 if_statement: if_part .
   61             | if_part . _ELSE statement

    _ELSE  shift, and go to state 69

    $default  reduce using rule 60 (if_statement)


State 53

   32 statement: return_statement .

    $default  reduce using rule 32 (statement)


State 54

   25 vars: _ID .

    $default  reduce using rule 25 (vars)


State 55

   20 variable: _TYPE $@3 vars . _SEMICOLON
   26 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 70
    _COMMA      shift, and go to state 71


State 56

   62 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 72
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    rel_exp        go to state 73


State 57

   51 exp: _ID .
   57 function_call: _ID . $@9 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 56 ($@9)
    $default  reduce using rule 51 (exp)

    $@9  go to state 74


State 58

   54 literal: _INT_NUMBER .

    $default  reduce using rule 54 (literal)


State 59

   55 literal: _UINT_NUMBER .

    $default  reduce using rule 55 (literal)


State 60

   53 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 75
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 61

   49 num_exp: num_exp . _AROP exp
   64 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 77


State 62

   48 num_exp: exp .

    $default  reduce using rule 48 (num_exp)


State 63

   50 exp: literal .

    $default  reduce using rule 50 (exp)


State 64

   52 exp: function_call .

    $default  reduce using rule 52 (exp)


State 65

   47 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 78
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 66

   44 inc_statement: _ID $@7 . _INC _SEMICOLON

    _INC  shift, and go to state 79


State 67

   46 compound_statement: _LBRACKET @8 . statement_list _RBRACKET

    $default  reduce using rule 27 (statement_list)

    statement_list  go to state 80


State 68

   37 branch_statement: _BRANCH _LPAREN . _ID $@5 _SEMICOLON literals $@6 _RPAREN startends

    _ID  shift, and go to state 81


State 69

   61 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 40
    _RETURN    shift, and go to state 41
    _ID        shift, and go to state 42
    _LBRACKET  shift, and go to state 43
    _BRANCH    shift, and go to state 45

    statement             go to state 82
    branch_statement      go to state 47
    inc_statement         go to state 48
    compound_statement    go to state 49
    assignment_statement  go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 70

   20 variable: _TYPE $@3 vars _SEMICOLON .

    $default  reduce using rule 20 (variable)


State 71

   26 vars: vars _COMMA . _ID

    _ID  shift, and go to state 83


State 72

   49 num_exp: num_exp . _AROP exp
   63 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 77
    _RELOP  shift, and go to state 84


State 73

   62 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 85


State 74

   57 function_call: _ID $@9 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 86


State 75

   49 num_exp: num_exp . _AROP exp
   53 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 87
    _AROP    shift, and go to state 77


State 76

   64 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 64 (return_statement)


State 77

   49 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    exp            go to state 88
    literal        go to state 63
    function_call  go to state 64


State 78

   47 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   49 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 89
    _AROP       shift, and go to state 77


State 79

   44 inc_statement: _ID $@7 _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 90


State 80

   28 statement_list: statement_list . statement
   46 compound_statement: _LBRACKET @8 statement_list . _RBRACKET

    _IF        shift, and go to state 40
    _RETURN    shift, and go to state 41
    _ID        shift, and go to state 42
    _LBRACKET  shift, and go to state 43
    _RBRACKET  shift, and go to state 91
    _BRANCH    shift, and go to state 45

    statement             go to state 46
    branch_statement      go to state 47
    inc_statement         go to state 48
    compound_statement    go to state 49
    assignment_statement  go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 81

   37 branch_statement: _BRANCH _LPAREN _ID . $@5 _SEMICOLON literals $@6 _RPAREN startends

    $default  reduce using rule 35 ($@5)

    $@5  go to state 92


State 82

   61 if_statement: if_part _ELSE statement .

    $default  reduce using rule 61 (if_statement)


State 83

   26 vars: vars _COMMA _ID .

    $default  reduce using rule 26 (vars)


State 84

   63 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    num_exp        go to state 93
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64


State 85

   62 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 40
    _RETURN    shift, and go to state 41
    _ID        shift, and go to state 42
    _LBRACKET  shift, and go to state 43
    _BRANCH    shift, and go to state 45

    statement             go to state 94
    branch_statement      go to state 47
    inc_statement         go to state 48
    compound_statement    go to state 49
    assignment_statement  go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 86

   57 function_call: _ID $@9 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 57
    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59
    _LPAREN       shift, and go to state 60

    $default  reduce using rule 58 (argument)

    num_exp        go to state 95
    exp            go to state 62
    literal        go to state 63
    function_call  go to state 64
    argument       go to state 96


State 87

   53 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 53 (exp)


State 88

   49 num_exp: num_exp _AROP exp .

    $default  reduce using rule 49 (num_exp)


State 89

   47 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 47 (assignment_statement)


State 90

   44 inc_statement: _ID $@7 _INC _SEMICOLON .

    $default  reduce using rule 44 (inc_statement)


State 91

   46 compound_statement: _LBRACKET @8 statement_list _RBRACKET .

    $default  reduce using rule 46 (compound_statement)


State 92

   37 branch_statement: _BRANCH _LPAREN _ID $@5 . _SEMICOLON literals $@6 _RPAREN startends

    _SEMICOLON  shift, and go to state 97


State 93

   49 num_exp: num_exp . _AROP exp
   63 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 63 (rel_exp)


State 94

   62 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 62 (if_part)


State 95

   49 num_exp: num_exp . _AROP exp
   59 argument: num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 59 (argument)


State 96

   57 function_call: _ID $@9 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 98


State 97

   37 branch_statement: _BRANCH _LPAREN _ID $@5 _SEMICOLON . literals $@6 _RPAREN startends

    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59

    literals  go to state 99
    literal   go to state 100


State 98

   57 function_call: _ID $@9 _LPAREN argument _RPAREN .

    $default  reduce using rule 57 (function_call)


State 99

   37 branch_statement: _BRANCH _LPAREN _ID $@5 _SEMICOLON literals . $@6 _RPAREN startends
   42 literals: literals . _COMMA literal

    _COMMA  shift, and go to state 101

    $default  reduce using rule 36 ($@6)

    $@6  go to state 102


State 100

   41 literals: literal .

    $default  reduce using rule 41 (literals)


State 101

   42 literals: literals _COMMA . literal

    _INT_NUMBER   shift, and go to state 58
    _UINT_NUMBER  shift, and go to state 59

    literal  go to state 103


State 102

   37 branch_statement: _BRANCH _LPAREN _ID $@5 _SEMICOLON literals $@6 . _RPAREN startends

    _RPAREN  shift, and go to state 104


State 103

   42 literals: literals _COMMA literal .

    $default  reduce using rule 42 (literals)


State 104

   37 branch_statement: _BRANCH _LPAREN _ID $@5 _SEMICOLON literals $@6 _RPAREN . startends

    _DO_START  shift, and go to state 105

    startends  go to state 106
    startend   go to state 107


State 105

   40 startend: _DO_START . statement _DO_END

    _IF        shift, and go to state 40
    _RETURN    shift, and go to state 41
    _ID        shift, and go to state 42
    _LBRACKET  shift, and go to state 43
    _BRANCH    shift, and go to state 45

    statement             go to state 108
    branch_statement      go to state 47
    inc_statement         go to state 48
    compound_statement    go to state 49
    assignment_statement  go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    return_statement      go to state 53


State 106

   37 branch_statement: _BRANCH _LPAREN _ID $@5 _SEMICOLON literals $@6 _RPAREN startends .
   39 startends: startends . startend

    _DO_START  shift, and go to state 105

    $default  reduce using rule 37 (branch_statement)

    startend  go to state 109


State 107

   38 startends: startend .

    $default  reduce using rule 38 (startends)


State 108

   40 startend: _DO_START statement . _DO_END

    _DO_END  shift, and go to state 110


State 109

   39 startends: startends startend .

    $default  reduce using rule 39 (startends)


State 110

   40 startend: _DO_START statement _DO_END .

    $default  reduce using rule 40 (startend)
